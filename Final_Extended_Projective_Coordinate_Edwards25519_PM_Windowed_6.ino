#include <Arduino.h>
#include <avr/io.h>
#include <stdlib.h>
#include <avr/pgmspace.h>

#define add Ed25519_add
#define sub Ed25519_sub
#define modulo Ed25519_modulo

typedef struct { unsigned char Ed[32]; } field_element;

extern "C"
{
  void sub(field_element *r, const field_element *x, const field_element *y);
  void add(field_element *r, const field_element *x, const field_element *y);
  void modulo(field_element *r, unsigned char *C);
  char Ed_num_sub_prime(unsigned char* r, const unsigned char* a);
  char Ed25519_square(unsigned char* r, const unsigned char* a);
  char Ed_mul(unsigned char* r, const unsigned char* a, const unsigned char* b);
  unsigned char scalar_sub_halforder(unsigned char* r, const unsigned char* a);
  unsigned char scalar_sub_order(unsigned char* r, const unsigned char* a);
  char Ed255_subp_bigint(unsigned char* r, const unsigned char* a);
}

void in_range(field_element *r);
void Ed25519_scalar_sub_order(field_element *r);
void flip_if(field_element *r, const field_element *x, unsigned char b);
void mul(field_element *r, const field_element *x, const field_element *y);
void square(field_element *r, const field_element *x);
void M_Inverse_Z(field_element *r, const field_element *x);

static const field_element PRECOMPUTED_POINTS[65][4] PROGMEM = {
  {{0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00},
   {0x01, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00},
   {0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00},
   {0x01, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00}},
  {{0x1A, 0xD5, 0x25, 0x8F, 0x60, 0x2D, 0x56, 0xC9, 0xB2, 0xA7, 0x25, 0x95, 0x60, 0xC7, 0x2C, 0x69, 0x5C, 0xDC, 0xD6, 0xFD, 0x31, 0xE2, 0xA4, 0xC0, 0xFE, 0x53, 0x6E, 0xCD, 0xD3, 0x36, 0x69, 0x21},
   {0x58, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66},
   {0xA3, 0xDD, 0xB7, 0xA5, 0xB3, 0x8A, 0xDE, 0x6D, 0xF5, 0x52, 0x51, 0x77, 0x80, 0x9F, 0xF0, 0x20, 0x7D, 0xE3, 0xAB, 0x64, 0x8E, 0x4E, 0xEA, 0x66, 0x65, 0x76, 0x8B, 0xD7, 0x0F, 0x5F, 0x87, 0x67},
   {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  {{0x57, 0x0A, 0x30, 0x18, 0x4C, 0x86, 0xBA, 0x7A, 0x5B, 0x62, 0x71, 0xFA, 0xDD, 0xC1, 0x6E, 0x88, 0x09, 0xF9, 0xB0, 0xB7, 0x87, 0x4B, 0x22, 0xEA, 0x4A, 0x25, 0x7C, 0x9A, 0xDB, 0x1D, 0x24, 0x31},
   {0xD7, 0x7F, 0x2D, 0x5E, 0xD9, 0x2C, 0x4B, 0x92, 0x1C, 0x32, 0xBE, 0x2B, 0x66, 0xAA, 0x47, 0x0A, 0xF6, 0x51, 0xC9, 0x3A, 0xFC, 0x82, 0xB7, 0x69, 0xDB, 0x33, 0xC9, 0x6C, 0x4C, 0x98, 0x24, 0x33},
   {0x99, 0x49, 0x4D, 0x1B, 0x07, 0x4E, 0xB3, 0x0E, 0x19, 0xBB, 0xF0, 0xED, 0xBF, 0xDA, 0x62, 0xA3, 0x0F, 0x7E, 0xA8, 0x48, 0x40, 0x56, 0xE4, 0x40, 0x95, 0x9C, 0xB5, 0x74, 0xC9, 0x7D, 0x24, 0x18},
   {0x6B, 0xDE, 0x78, 0x02, 0x3D, 0xA9, 0x74, 0x63, 0xD1, 0x99, 0x92, 0x33, 0x00, 0x61, 0xD3, 0xEB, 0x92, 0x62, 0x42, 0x3B, 0xFA, 0xD1, 0x98, 0x40, 0x57, 0x7C, 0x57, 0x6B, 0x79, 0xC5, 0x86, 0x69}},
  {{0x03, 0xF3, 0xC3, 0x65, 0xCE, 0x01, 0xBC, 0x7F, 0xC2, 0xC3, 0x5B, 0x4B, 0x34, 0xA5, 0xBC, 0xCF, 0x2A, 0xCB, 0x78, 0x8E, 0x75, 0xF9, 0x85, 0xFA, 0x40, 0x69, 0x8B, 0xF1, 0x4E, 0xB9, 0xB9, 0x26},
   {0x37, 0x76, 0x2A, 0xF6, 0x8D, 0xA7, 0xCF, 0x72, 0xDB, 0xE3, 0x2A, 0xE6, 0xD9, 0xB7, 0xD9, 0x4D, 0x7C, 0x18, 0x88, 0xF0, 0xC6, 0x8D, 0x05, 0xD3, 0xAA, 0x4C, 0x6A, 0x12, 0x37, 0x9B, 0x5C, 0x19},
   {0xE0, 0xD8, 0xDE, 0x5F, 0x06, 0xF6, 0x5D, 0xCC, 0x1A, 0x64, 0x14, 0x87, 0x04, 0xFB, 0x2F, 0x3F, 0xB3, 0x07, 0x91, 0x58, 0x08, 0x7F, 0x87, 0x92, 0xE1, 0xCC, 0xF1, 0xBB, 0xB2, 0xB5, 0xBE, 0x3B},
   {0xAF, 0x92, 0xE1, 0xC1, 0xF3, 0xC3, 0x6E, 0x7B, 0x3E, 0x10, 0x7E, 0xB1, 0x76, 0xBF, 0xCD, 0x4A, 0xE3, 0x07, 0xFD, 0x0E, 0x09, 0xC3, 0xC6, 0xF5, 0xB2, 0x86, 0x92, 0xA6, 0xBE, 0xA8, 0xDC, 0x1D}},
  {{0x95, 0x05, 0x02, 0xE9, 0x8E, 0xA7, 0xAD, 0x05, 0xDB, 0x30, 0x01, 0x98, 0x1B, 0xE1, 0x3E, 0xD8, 0xBB, 0x7F, 0xF7, 0x52, 0x34, 0xBF, 0x3F, 0xE9, 0x95, 0x9F, 0xD1, 0x92, 0x90, 0xE2, 0xD6, 0x7A},
   {0xDC, 0x08, 0xB3, 0x80, 0x79, 0x52, 0x3C, 0x4C, 0x0F, 0x29, 0x4C, 0xC4, 0xD6, 0x3D, 0x64, 0xBE, 0x4D, 0x48, 0x9F, 0xEA, 0x85, 0x11, 0xD8, 0x39, 0x35, 0xAD, 0x90, 0x00, 0xAE, 0x83, 0xC9, 0x12},
   {0xB6, 0x92, 0xBD, 0xE3, 0xE9, 0x76, 0xA5, 0x6E, 0x4A, 0x2E, 0xBE, 0x71, 0x10, 0x09, 0xC2, 0x42, 0x4C, 0x27, 0x27, 0x00, 0x75, 0x98, 0x67, 0x1A, 0x26, 0x58, 0x30, 0xB0, 0x19, 0x07, 0xC3, 0x48},
   {0xB8, 0xEB, 0x15, 0x44, 0x11, 0x3C, 0x49, 0xE2, 0xC2, 0xDC, 0x77, 0x4C, 0xD6, 0x9A, 0x50, 0xDC, 0xFF, 0xB8, 0xD8, 0xA0, 0xD8, 0xD0, 0x48, 0x15, 0xB1, 0xDD, 0x0A, 0x32, 0x96, 0x6B, 0x6E, 0x78}},
  {{0x9F, 0x2A, 0xB2, 0xFF, 0x0B, 0xB2, 0x9A, 0x1D, 0xC3, 0x1C, 0xCA, 0x28, 0x03, 0xA1, 0x11, 0x9A, 0xFE, 0xCE, 0xA0, 0xE7, 0xB6, 0xED, 0x54, 0x19, 0x52, 0xE6, 0xAB, 0x00, 0x7F, 0xA2, 0xFD, 0x75},
   {0x9B, 0xE2, 0x3B, 0x76, 0x77, 0x92, 0x59, 0xF6, 0x10, 0x2A, 0xBC, 0x07, 0x0A, 0x79, 0x5D, 0xC4, 0x16, 0x24, 0x57, 0x7E, 0xF8, 0x09, 0xD2, 0x02, 0x55, 0x6B, 0x56, 0x00, 0xD8, 0x8A, 0xB2, 0x17},
   {0x04, 0xF7, 0x4A, 0x1D, 0x55, 0x14, 0x88, 0x99, 0xF3, 0xB7, 0x01, 0x38, 0xCD, 0x83, 0x27, 0x2E, 0xA9, 0xE3, 0x53, 0x25, 0x85, 0x99, 0xC1, 0x7C, 0xA1, 0xCA, 0xA4, 0xE1, 0x59, 0xA8, 0x87, 0x1A},
   {0xC8, 0x01, 0x08, 0xFE, 0x89, 0xB4, 0xFD, 0xB8, 0x1B, 0xE1, 0xFD, 0x6F, 0xEC, 0xC6, 0xA7, 0x6C, 0x6E, 0x44, 0x4D, 0xD6, 0x31, 0x9B, 0x09, 0x55, 0x70, 0x67, 0x07, 0xEA, 0x42, 0xD6, 0x74, 0x65}},
  {{0xB6, 0xF7, 0xFE, 0xBD, 0xBB, 0x1E, 0x33, 0x0B, 0x2B, 0xD9, 0x92, 0x9C, 0x4F, 0x4F, 0x78, 0x5B, 0x44, 0x79, 0x8C, 0xD7, 0x12, 0x6F, 0x36, 0x50, 0x66, 0x49, 0xC3, 0xFB, 0x85, 0xC7, 0xCB, 0x34},
   {0x3C, 0x8C, 0x1C, 0xDA, 0xF8, 0x97, 0x7F, 0xF8, 0x71, 0x5C, 0xB4, 0x80, 0x6C, 0xE4, 0x4C, 0x5E, 0xE5, 0x26, 0x96, 0x76, 0xD2, 0xD3, 0x99, 0x07, 0xF7, 0x1F, 0x91, 0x2D, 0xD4, 0x0C, 0xBE, 0x43},
   {0xA8, 0xA7, 0x11, 0x70, 0xE8, 0x7D, 0xF1, 0xCB, 0x7D, 0xA2, 0x9A, 0xFF, 0x79, 0xE6, 0x1F, 0xB0, 0xAD, 0x5F, 0xD3, 0x54, 0x2A, 0x7A, 0x67, 0x85, 0x31, 0x1C, 0x07, 0x12, 0x13, 0xEF, 0x73, 0x14},
   {0x09, 0x9D, 0x59, 0xB8, 0x1C, 0x48, 0xBA, 0x1D, 0x4D, 0x9F, 0xFC, 0x16, 0x46, 0x20, 0xD2, 0xB5, 0x01, 0x6D, 0x76, 0x59, 0xDA, 0xA8, 0xF6, 0x1C, 0x31, 0xAD, 0x77, 0xB9, 0x4C, 0xCA, 0x26, 0x76}},
  {{0x7E, 0xE1, 0x42, 0x35, 0x39, 0xCE, 0x91, 0x79, 0x73, 0x6C, 0x40, 0x9F, 0xE6, 0x78, 0xD1, 0xBD, 0x2B, 0x82, 0x9F, 0xE8, 0x9A, 0x84, 0x37, 0x6E, 0x32, 0x27, 0xDE, 0x7A, 0x58, 0x52, 0x6F, 0x14},
   {0x95, 0x4C, 0xCC, 0x7B, 0x7F, 0x99, 0x1B, 0xCB, 0xC0, 0xDA, 0x63, 0x5D, 0x7C, 0xC9, 0xE1, 0x95, 0x0D, 0x0A, 0x9C, 0xA5, 0x22, 0x65, 0xAC, 0xBF, 0xA3, 0x88, 0x72, 0x08, 0x5A, 0xF0, 0x3C, 0x6D},
   {0x15, 0x2F, 0x60, 0x86, 0x3B, 0xAD, 0x4A, 0x64, 0xDF, 0x10, 0xAC, 0x8A, 0x6C, 0xED, 0x26, 0xF7, 0x9F, 0xD3, 0xBB, 0xA1, 0xCA, 0x3B, 0x05, 0x02, 0xA6, 0xE7, 0x6B, 0xD6, 0xDB, 0x0E, 0xC4, 0x55},
   {0xED, 0x41, 0xC1, 0xA5, 0x5A, 0xF0, 0xFD, 0x89, 0x7E, 0x18, 0x25, 0xFA, 0xEF, 0xC8, 0xF6, 0x4C, 0x14, 0x95, 0x44, 0xE9, 0xBC, 0xE3, 0x0F, 0xEB, 0x88, 0x44, 0xA5, 0xB6, 0x6B, 0xDB, 0x0F, 0x41}},
  {{0xDA, 0xB5, 0x9D, 0xD9, 0x91, 0x10, 0x80, 0xA0, 0x58, 0xA6, 0xEC, 0xEA, 0x67, 0x15, 0xD5, 0x63, 0x33, 0xF0, 0xFB, 0xC0, 0xE6, 0x64, 0xE2, 0xB8, 0x88, 0x50, 0x8F, 0xAE, 0xDA, 0x89, 0x13, 0x61},
   {0x2F, 0x58, 0x70, 0xEF, 0x27, 0x1F, 0x15, 0xD1, 0x14, 0xE5, 0xE9, 0xFB, 0xA0, 0xAE, 0xE6, 0x05, 0x31, 0xA8, 0x4E, 0xA4, 0x59, 0x41, 0x0F, 0x17, 0xCF, 0xA9, 0x36, 0xF4, 0x72, 0x3B, 0x59, 0x00},
   {0xB4, 0x72, 0xC5, 0xC8, 0x58, 0xD8, 0x35, 0xF7, 0xE3, 0x22, 0xBB, 0x91, 0xBC, 0x4A, 0x6A, 0x34, 0xFB, 0x9C, 0xF4, 0xFD, 0x45, 0x6B, 0xD8, 0xB5, 0x35, 0xD2, 0x75, 0xF1, 0x63, 0xB5, 0x92, 0x5C},
   {0xEF, 0x7D, 0x91, 0x5C, 0xB3, 0x43, 0xF7, 0xB8, 0xBF, 0xBC, 0x6E, 0x5A, 0x87, 0x73, 0xF3, 0xF6, 0x72, 0x75, 0x80, 0x67, 0xB1, 0x8E, 0x70, 0xB0, 0xE5, 0xB8, 0x45, 0x30, 0xC2, 0xE5, 0x21, 0x55}},
  {{0xE8, 0xAB, 0xEA, 0x8B, 0x0F, 0x9A, 0xFA, 0x65, 0xCB, 0x7E, 0x68, 0x1E, 0xF8, 0xDF, 0xF4, 0x5A, 0xF6, 0xA4, 0xBD, 0xDC, 0x74, 0x42, 0x99, 0xE8, 0xF7, 0xA0, 0x54, 0x98, 0x57, 0xED, 0xD3, 0x4D},
   {0x37, 0x6A, 0xC4, 0xF3, 0x03, 0x2A, 0x0C, 0x27, 0xAC, 0x04, 0x0E, 0xF4, 0x70, 0xE0, 0xDB, 0xF7, 0xD3, 0x47, 0x92, 0xA7, 0x87, 0x4A, 0x41, 0xB1, 0x68, 0xF3, 0xAA, 0xF5, 0x98, 0x66, 0x81, 0x0F},
   {0x25, 0xFB, 0x4F, 0xDB, 0x5E, 0xAC, 0x89, 0xB5, 0x10, 0x97, 0x51, 0x7F, 0x65, 0x53, 0x8C, 0xF4, 0x7C, 0x40, 0xEE, 0xE8, 0x81, 0xE5, 0x29, 0xAF, 0x1A, 0xE3, 0xCE, 0xAE, 0xC7, 0x0C, 0x71, 0x5C},
   {0xE9, 0xC3, 0xFC, 0x83, 0x74, 0xF2, 0x5C, 0x30, 0x95, 0xE3, 0x28, 0x5F, 0x96, 0x8F, 0x4D, 0xB1, 0xF0, 0x8F, 0x52, 0x07, 0x29, 0x54, 0x25, 0xBA, 0x47, 0x45, 0x13, 0x41, 0x04, 0xE4, 0x83, 0x68}},
  {{0x3A, 0xA6, 0xB1, 0x19, 0x94, 0xE6, 0x83, 0xFE, 0x66, 0xC7, 0x5B, 0x85, 0x5A, 0x76, 0xAD, 0xC6, 0x0C, 0x30, 0x54, 0x92, 0x8D, 0x45, 0x06, 0x86, 0x84, 0x50, 0x8A, 0x23, 0x22, 0x12, 0xAE, 0x48},
   {0x71, 0xBB, 0xC5, 0x0F, 0x53, 0x94, 0x5C, 0xBF, 0x56, 0x01, 0x93, 0x02, 0xEE, 0xE8, 0x0C, 0x42, 0x54, 0xF8, 0x63, 0x22, 0x82, 0x36, 0x9D, 0x44, 0x1A, 0x95, 0x5E, 0x1F, 0x67, 0x3E, 0xE6, 0x1E},
   {0x7E, 0xE4, 0x79, 0xEE, 0x0B, 0xA5, 0x09, 0x90, 0xCA, 0xB3, 0xA1, 0x20, 0x23, 0xDB, 0x28, 0xA2, 0x0D, 0x7F, 0x11, 0x5D, 0x31, 0x9F, 0x16, 0xA2, 0xF6, 0x87, 0x13, 0xC5, 0x59, 0x93, 0x23, 0x16},
   {0x88, 0xB9, 0x61, 0x5E, 0x7A, 0xA5, 0x17, 0x3D, 0x41, 0xE0, 0xF6, 0x7C, 0xE2, 0x29, 0x5B, 0x69, 0xD2, 0x01, 0xB1, 0x9A, 0x5E, 0x52, 0x0B, 0x4E, 0xE4, 0x83, 0xF4, 0xB9, 0x04, 0xFC, 0xEF, 0x25}},
  {{0x1A, 0x1E, 0x9D, 0x2C, 0xC7, 0x1D, 0x79, 0x54, 0xF1, 0xC0, 0x97, 0x15, 0xDF, 0x75, 0x51, 0xC0, 0x61, 0xB6, 0xDA, 0xE2, 0xCF, 0xF6, 0x41, 0x6E, 0x39, 0xCA, 0x7E, 0x40, 0x4B, 0x16, 0xDC, 0x0B},
   {0x0B, 0x70, 0xC9, 0x22, 0xCD, 0x21, 0x69, 0x0B, 0xA5, 0x1D, 0xDD, 0x75, 0x7E, 0x35, 0xB6, 0x4B, 0x65, 0x7A, 0x34, 0xD1, 0x6B, 0x35, 0x65, 0x1D, 0xFD, 0xD9, 0xB8, 0x6E, 0x85, 0x48, 0xAA, 0x4F},
   {0x1D, 0xF2, 0x70, 0x09, 0x4D, 0x9C, 0x95, 0xDC, 0x46, 0x11, 0xD0, 0xCF, 0x13, 0x35, 0xE4, 0x04, 0xA5, 0xF5, 0xA0, 0x94, 0x52, 0x9B, 0x89, 0xAB, 0x71, 0x4F, 0x65, 0xF9, 0x5F, 0x57, 0xF7, 0x56},
   {0xA9, 0x0A, 0x2C, 0x65, 0xAC, 0x05, 0x81, 0xE5, 0x29, 0xF1, 0x57, 0xEF, 0x44, 0x78, 0x9A, 0x24, 0x5B, 0x93, 0xB2, 0x98, 0x79, 0x68, 0x38, 0x4B, 0xDC, 0xD3, 0xFF, 0x4B, 0x24, 0x33, 0x45, 0x7F}},
  {{0xDB, 0x2A, 0x19, 0xB8, 0xBC, 0x96, 0xA4, 0xB3, 0x31, 0x4F, 0x8A, 0x37, 0xC4, 0x68, 0x8F, 0xC6, 0xEB, 0x0D, 0x35, 0x99, 0x47, 0xEC, 0xC2, 0xE8, 0x67, 0x81, 0xA2, 0x27, 0x64, 0x51, 0xCC, 0x75},
   {0x61, 0xEC, 0xC2, 0xFE, 0x27, 0x86, 0x29, 0x16, 0xBC, 0xEB, 0xD4, 0xD7, 0x41, 0x03, 0x63, 0x33, 0x0D, 0x6D, 0xED, 0xE6, 0x25, 0x34, 0x39, 0x48, 0xDE, 0x98, 0x53, 0x16, 0xDE, 0x98, 0x15, 0x0B},
   {0x0B, 0xC7, 0xBF, 0x9E, 0x7D, 0xFC, 0xA7, 0x81, 0xF9, 0x2C, 0x68, 0xCE, 0xAC, 0xE5, 0xB3, 0x8B, 0x38, 0x4E, 0xEE, 0x9A, 0xE8, 0x7B, 0x21, 0xDD, 0xB9, 0xC0, 0xE4, 0xC5, 0x81, 0xB3, 0x38, 0x2E},
   {0x1C, 0x1A, 0x25, 0x4E, 0x56, 0xA6, 0x00, 0xA4, 0xA5, 0x9F, 0x71, 0xB1, 0x8D, 0x55, 0x49, 0xE8, 0xEE, 0x69, 0x3F, 0x8D, 0x23, 0x50, 0xFD, 0x4A, 0xA5, 0x57, 0x6F, 0xBB, 0x27, 0x92, 0xE7, 0x3A}},
  {{0xF2, 0xC0, 0xEC, 0x74, 0xEB, 0xA0, 0x0F, 0xB9, 0xDE, 0xF9, 0x4A, 0x9F, 0x28, 0xD2, 0x1A, 0x65, 0xC8, 0x45, 0x00, 0x89, 0x09, 0x46, 0x7F, 0xAE, 0x9A, 0xAE, 0x59, 0xCC, 0x57, 0x4E, 0xD7, 0x1A},
   {0x2E, 0xC5, 0x04, 0xF4, 0xB2, 0x5A, 0x89, 0x26, 0xFB, 0x46, 0xF2, 0xDF, 0xAE, 0xC5, 0x91, 0x66, 0xFE, 0x84, 0x6F, 0x51, 0xED, 0x85, 0xD4, 0x7D, 0x6E, 0x96, 0x81, 0xA6, 0xCB, 0x83, 0xDE, 0x49},
   {0x14, 0xE0, 0x8A, 0x4B, 0x57, 0xF7, 0x3C, 0x17, 0xFB, 0xD5, 0xF8, 0x36, 0xEA, 0x84, 0x60, 0x28, 0x4E, 0x8B, 0xA0, 0xBA, 0xDF, 0xBD, 0xD3, 0x6A, 0x30, 0x6B, 0x68, 0x02, 0xCC, 0xC2, 0x8F, 0x59},
   {0xC7, 0x70, 0x17, 0xEB, 0x23, 0x74, 0x50, 0x26, 0xA0, 0xF5, 0xA0, 0x3E, 0xB2, 0x6F, 0xC0, 0x55, 0x75, 0x13, 0xAB, 0xE5, 0x2E, 0x7F, 0x9A, 0x6A, 0x3B, 0xBA, 0x73, 0x78, 0x98, 0xBB, 0x11, 0x3E}},
  {{0x25, 0xED, 0x8C, 0xCB, 0x9F, 0x44, 0x44, 0xFA, 0x9B, 0x91, 0x6A, 0x1B, 0xE8, 0x10, 0x2A, 0x0D, 0x75, 0xA4, 0x85, 0xBF, 0x0B, 0xA8, 0xC8, 0x7E, 0x84, 0x97, 0x2D, 0xA4, 0x29, 0x48, 0x3D, 0x2E},
   {0x64, 0xD4, 0xD9, 0x6B, 0xC5, 0x3F, 0x79, 0x8A, 0x2E, 0x54, 0x32, 0x61, 0x47, 0x3C, 0x84, 0xA4, 0x60, 0x1E, 0xFC, 0x6E, 0x8E, 0xC9, 0x4E, 0x26, 0x26, 0x56, 0x44, 0x37, 0xD4, 0x8B, 0xFE, 0x06},
   {0xC6, 0x15, 0x12, 0x6C, 0x4F, 0x1A, 0xFB, 0xA8, 0x10, 0xE0, 0x28, 0x5B, 0xFD, 0x09, 0x08, 0x90, 0xE4, 0xBD, 0x05, 0x84, 0xC7, 0x5A, 0x4A, 0xB0, 0x66, 0xB2, 0xD9, 0xAA, 0x97, 0x4E, 0x7E, 0x62},
   {0x07, 0x2A, 0xB0, 0xB8, 0x4E, 0xA3, 0x27, 0xEE, 0x6A, 0x6A, 0xC9, 0xE4, 0x2A, 0x58, 0x29, 0xF0, 0x93, 0x01, 0x9B, 0xAE, 0x50, 0x0F, 0xE7, 0x89, 0x34, 0x1D, 0xF2, 0xDA, 0x10, 0x42, 0x7C, 0x60}},
  {{0x06, 0x06, 0x0E, 0x11, 0xDC, 0x29, 0xB0, 0x0E, 0xE6, 0x98, 0xB5, 0x01, 0x11, 0x5C, 0x69, 0xCE, 0x4A, 0xAF, 0xB1, 0x5B, 0x35, 0x03, 0x87, 0x9A, 0x33, 0x61, 0xA2, 0x05, 0x55, 0xD6, 0x24, 0x71},
   {0x4E, 0x08, 0x9C, 0xD3, 0x2F, 0xD9, 0x2E, 0x67, 0x48, 0x95, 0x01, 0xFB, 0x34, 0xE2, 0x36, 0x21, 0x3E, 0x00, 0xCF, 0xD6, 0xB7, 0x68, 0x23, 0xA7, 0x2E, 0xD5, 0xAE, 0x80, 0xFF, 0x37, 0xC9, 0x15},
   {0x3E, 0x10, 0x4F, 0xCA, 0xB3, 0x44, 0x36, 0xBC, 0x93, 0x5B, 0x93, 0xEF, 0x2C, 0x7F, 0xA7, 0x41, 0x9A, 0x89, 0xF3, 0xEF, 0x63, 0x4B, 0xA6, 0x3B, 0x4F, 0xE3, 0xC5, 0x6F, 0x8B, 0xF4, 0x6B, 0x01},
   {0x7B, 0xF4, 0x41, 0x1F, 0xB9, 0xDA, 0x96, 0xF4, 0x45, 0x4A, 0xEB, 0x63, 0x0B, 0x28, 0x7C, 0x06, 0x1C, 0x86, 0xF5, 0x9E, 0x75, 0x90, 0x18, 0x34, 0x01, 0x5B, 0xA6, 0x18, 0xF5, 0xF1, 0xA3, 0x33}},
  {{0x42, 0xF6, 0x3E, 0x16, 0xAD, 0x60, 0x71, 0xE2, 0x67, 0x3E, 0xC4, 0xB0, 0x05, 0xFD, 0x89, 0x6D, 0x31, 0x42, 0x53, 0x7B, 0x4F, 0x9A, 0xCC, 0xE8, 0xA0, 0x0C, 0xA1, 0x9C, 0x96, 0x73, 0xD2, 0x4D},
   {0x50, 0x2F, 0x9D, 0x2B, 0xF2, 0xE6, 0x97, 0x8D, 0x6D, 0xFD, 0xFB, 0x4B, 0xA1, 0x0B, 0x6D, 0x22, 0x5F, 0xCE, 0xC8, 0x7A, 0x15, 0x60, 0xAB, 0xE7, 0x3E, 0x92, 0xE9, 0x1F, 0x3A, 0xF7, 0xE0, 0x6F},
   {0xAB, 0x04, 0x2C, 0xAF, 0x62, 0x1A, 0xD5, 0x6A, 0x74, 0x58, 0x0D, 0xB4, 0x40, 0xD8, 0xD7, 0x06, 0x76, 0x36, 0x2D, 0x87, 0xF4, 0x61, 0x68, 0x60, 0x89, 0x5D, 0xE9, 0x2D, 0xA2, 0x05, 0x69, 0x41},
   {0x82, 0xBA, 0x90, 0xB6, 0x06, 0xC6, 0x60, 0x98, 0x7A, 0x8D, 0xF4, 0xD9, 0x07, 0x6E, 0xF2, 0xF5, 0xD7, 0x38, 0x0E, 0x50, 0x5C, 0x5C, 0x4F, 0x42, 0x3E, 0x37, 0x07, 0x88, 0x35, 0x05, 0xF8, 0x20}},
  {{0x3E, 0xB0, 0x62, 0x0F, 0xE5, 0xA0, 0x0F, 0x64, 0x61, 0xCE, 0x1B, 0xB5, 0xE8, 0x73, 0x1B, 0x1F, 0x94, 0xD5, 0x05, 0xBB, 0xF3, 0x1C, 0x13, 0xCF, 0xEA, 0xDB, 0xA6, 0x1B, 0x39, 0x5A, 0xF5, 0x1F},
   {0xC4, 0xF2, 0xBB, 0x2D, 0xB8, 0x5E, 0xDE, 0x3F, 0x6A, 0x39, 0x61, 0x5A, 0xF5, 0xA5, 0xB0, 0x2D, 0xED, 0xED, 0x1F, 0x30, 0x27, 0x73, 0x4F, 0xC1, 0xF2, 0xDC, 0xC0, 0x0F, 0xB5, 0x6E, 0xC3, 0x37},
   {0xB4, 0xCA, 0x6B, 0xE8, 0x57, 0x2B, 0xAB, 0x56, 0x72, 0x2D, 0x95, 0xEF, 0xCC, 0x22, 0x88, 0xDD, 0x54, 0xAD, 0x7C, 0x5C, 0x97, 0x1F, 0x47, 0xDE, 0xD2, 0x13, 0x40, 0x99, 0xE4, 0x2C, 0xF8, 0x13},
   {0xE1, 0x1B, 0x5A, 0xFE, 0x7E, 0x27, 0xAA, 0xA9, 0x73, 0xD7, 0xBE, 0xD2, 0xD8, 0x5F, 0x6D, 0x44, 0x7E, 0x0A, 0x62, 0xBF, 0x43, 0xE2, 0x1E, 0x91, 0x09, 0x7A, 0xBB, 0x68, 0x58, 0xE7, 0x49, 0x21}},
  {{0x99, 0xBF, 0xB4, 0x9D, 0x77, 0xFA, 0xE0, 0xA3, 0x21, 0xA4, 0xAB, 0x31, 0xF9, 0xB6, 0x25, 0x76, 0xAE, 0x69, 0x3F, 0x20, 0xAC, 0x3E, 0x89, 0x5B, 0x75, 0x18, 0x5B, 0xA1, 0x35, 0x88, 0xF2, 0x38},
   {0x51, 0xCB, 0x0F, 0xE5, 0x2B, 0x98, 0x47, 0xB8, 0x23, 0x1D, 0x3F, 0xD2, 0x40, 0x16, 0xA6, 0xD5, 0xBE, 0x09, 0xFC, 0x9A, 0x0B, 0x59, 0x2C, 0xC8, 0xD7, 0xA0, 0x78, 0x5A, 0x45, 0xCC, 0xEC, 0x3D},
   {0x2D, 0x89, 0x96, 0x48, 0xEC, 0x4C, 0x82, 0x08, 0xDF, 0x28, 0xF4, 0x1D, 0xAA, 0xD1, 0x39, 0xCF, 0x77, 0xA1, 0xE1, 0xE5, 0x32, 0xA5, 0xA7, 0xA3, 0x64, 0x27, 0xF8, 0x46, 0x2E, 0xF7, 0x2A, 0x72},
   {0xF7, 0x7D, 0xD5, 0xDB, 0x72, 0x13, 0xEF, 0x5C, 0xF3, 0xE9, 0x8B, 0x4D, 0x19, 0x8C, 0x77, 0xAE, 0xEA, 0xE4, 0xD9, 0xB5, 0xB7, 0x61, 0x9D, 0x1D, 0x6C, 0xB1, 0x16, 0x67, 0x90, 0x5F, 0x20, 0x05}},
  {{0x01, 0xA7, 0xE2, 0x94, 0x4A, 0x39, 0x6A, 0x08, 0x86, 0xB1, 0xFB, 0xB3, 0x0D, 0xEC, 0x99, 0xE2, 0x91, 0x18, 0x3C, 0xE9, 0x90, 0xAA, 0xC4, 0xA6, 0x09, 0xEC, 0x4D, 0x12, 0xFD, 0x2F, 0x59, 0x6D},
   {0xCE, 0x71, 0xB4, 0x84, 0x84, 0x96, 0x84, 0x25, 0x55, 0x49, 0x2C, 0x3F, 0x72, 0xC4, 0xCF, 0x9F, 0x70, 0xC4, 0x03, 0xE4, 0x3F, 0x7B, 0x55, 0x68, 0x46, 0x5D, 0x84, 0xC0, 0x29, 0xE3, 0xBC, 0x6F},
   {0x32, 0xA8, 0x20, 0xC5, 0xA0, 0x1A, 0x95, 0x69, 0xFC, 0xBA, 0x77, 0xD0, 0xAF, 0x81, 0x53, 0xC3, 0x25, 0x41, 0x88, 0x5D, 0x21, 0x02, 0x7E, 0x1A, 0x57, 0x29, 0x6E, 0x6D, 0x18, 0xD0, 0xF0, 0x2F},
   {0xA9, 0x4A, 0x0D, 0xC2, 0x55, 0x9B, 0xF0, 0x74, 0xE3, 0x3C, 0x0A, 0xAF, 0x45, 0x5F, 0x5C, 0xAD, 0x32, 0xA3, 0xBC, 0x8C, 0x6C, 0x30, 0x10, 0xF9, 0x20, 0x22, 0x71, 0x92, 0xFF, 0x65, 0xAA, 0x19}},
  {{0xF0, 0x9A, 0x94, 0xBE, 0xAB, 0xB0, 0x19, 0x50, 0x74, 0x8E, 0xCB, 0x84, 0xE5, 0xF8, 0xB5, 0xF4, 0x62, 0x8B, 0x94, 0x09, 0x3A, 0x6F, 0xF8, 0xC8, 0x87, 0xC9, 0xE5, 0xB7, 0xE3, 0xBB, 0x71, 0x64},
   {0x1A, 0x5D, 0x61, 0x43, 0xA0, 0x6A, 0x46, 0x5F, 0x37, 0x5A, 0xDB, 0x87, 0x84, 0xF3, 0x90, 0xDC, 0x37, 0x09, 0x98, 0x8F, 0xB3, 0x65, 0x78, 0x9F, 0xA6, 0x72, 0x19, 0xA0, 0x48, 0x49, 0xE4, 0x19},
   {0x78, 0x95, 0x06, 0x8E, 0xD3, 0x1A, 0x25, 0xEC, 0xEF, 0x91, 0x50, 0x54, 0xEC, 0x9D, 0xE6, 0x77, 0x10, 0x38, 0xB3, 0x77, 0x62, 0x4C, 0x00, 0xFC, 0x6A, 0xB6, 0x56, 0x98, 0x0A, 0x8A, 0xA9, 0x19},
   {0xAE, 0x0E, 0x67, 0x2F, 0x29, 0x28, 0x1D, 0x5A, 0x9A, 0x1D, 0x71, 0x9A, 0xC7, 0xDF, 0xE8, 0x47, 0x40, 0xAF, 0xDA, 0x4D, 0x3A, 0x98, 0x00, 0x63, 0x54, 0xB6, 0x1E, 0xFC, 0xEB, 0x72, 0x63, 0x6B}},
  {{0x29, 0x9F, 0x7F, 0xDC, 0xE2, 0x79, 0x81, 0x66, 0xFE, 0x3D, 0x96, 0x5E, 0x82, 0x33, 0x40, 0x58, 0x1B, 0x0E, 0x7E, 0x67, 0xBC, 0x2F, 0x47, 0xA5, 0xA2, 0xFE, 0x44, 0xC6, 0xF1, 0x7B, 0x26, 0x79},
   {0xA9, 0x18, 0xA7, 0x90, 0xF0, 0xEF, 0x5B, 0x0E, 0x69, 0x46, 0x7D, 0x2D, 0x0A, 0x2F, 0xDE, 0x44, 0x2A, 0x57, 0x8F, 0x2F, 0xDC, 0xD2, 0xDB, 0xBD, 0x99, 0x9F, 0xC3, 0x61, 0xC8, 0xC5, 0x60, 0x74},
   {0xA7, 0x6E, 0xD3, 0x36, 0x63, 0xC5, 0x89, 0x27, 0x76, 0x3E, 0x4D, 0x84, 0xE7, 0x2E, 0x4C, 0xBB, 0x4E, 0xF1, 0xE7, 0x0F, 0xF8, 0x63, 0x1B, 0xBC, 0x5E, 0x02, 0x48, 0x00, 0x41, 0x9C, 0x0B, 0x41},
   {0x43, 0x31, 0x31, 0xE5, 0x07, 0xE6, 0x56, 0xB5, 0xFD, 0x68, 0x7A, 0xA7, 0x6E, 0x35, 0xE8, 0x6D, 0xB5, 0xFB, 0xAE, 0x22, 0xB6, 0xB1, 0x8D, 0x40, 0x43, 0x55, 0x00, 0xD7, 0xC8, 0x11, 0x69, 0x5A}},
  {{0x44, 0xD2, 0xF9, 0x91, 0xB7, 0x7C, 0xAC, 0x39, 0xAB, 0x8D, 0xC0, 0xC8, 0xBE, 0xFE, 0x7A, 0x4D, 0x6D, 0x25, 0xA5, 0x68, 0xA5, 0x1A, 0xD7, 0x77, 0xE0, 0x08, 0x86, 0x1B, 0x86, 0x0D, 0x62, 0x64},
   {0x56, 0x89, 0x9A, 0xA8, 0x28, 0xA0, 0x7C, 0x2E, 0x59, 0xB6, 0x49, 0x9B, 0x97, 0x1A, 0x5C, 0xC2, 0x65, 0x94, 0x22, 0xB8, 0x55, 0xA6, 0xFF, 0x42, 0xEB, 0x48, 0xFB, 0x7C, 0xA7, 0x34, 0x23, 0x09},
   {0xB0, 0x8F, 0x03, 0xE7, 0xA8, 0x26, 0x13, 0xD2, 0x9B, 0x7C, 0x34, 0xCD, 0x61, 0x99, 0xBF, 0x6C, 0xFA, 0x8F, 0xCD, 0xCC, 0x06, 0xCA, 0xA7, 0xFC, 0x1C, 0xF2, 0xC0, 0x4E, 0x84, 0xAD, 0xC1, 0x21},
   {0xA0, 0x08, 0xDC, 0xBE, 0xE4, 0x5B, 0x40, 0x72, 0xC4, 0xC5, 0x29, 0x5D, 0xCE, 0xB9, 0xD1, 0xAF, 0xF2, 0xE7, 0x59, 0x14, 0x44, 0x91, 0x3E, 0xE8, 0x18, 0xCF, 0xEF, 0x47, 0x28, 0x7B, 0x43, 0x07}},
  {{0xC3, 0xBD, 0x9E, 0x16, 0xC4, 0xE2, 0xF0, 0x99, 0xF4, 0x8B, 0xDC, 0xB9, 0x31, 0x2A, 0xE9, 0x80, 0x47, 0xED, 0x0D, 0x53, 0xC0, 0xD8, 0x81, 0x40, 0x8A, 0xCE, 0xF0, 0x6E, 0x82, 0x3F, 0x61, 0x08},
   {0x71, 0xE2, 0xFC, 0xBB, 0x8A, 0xAB, 0x66, 0xBE, 0x77, 0xF5, 0x51, 0x5C, 0x9C, 0x8A, 0x0E, 0x99, 0x9B, 0x51, 0xDA, 0x1E, 0xB9, 0x02, 0x63, 0xAC, 0x70, 0x57, 0x91, 0x07, 0xA3, 0x16, 0xD8, 0x5E},
   {0x4D, 0x31, 0xB4, 0xC0, 0x56, 0x18, 0x9E, 0x2F, 0x69, 0x9B, 0x2A, 0xCA, 0x24, 0x70, 0x67, 0xAC, 0xC0, 0xDB, 0xDF, 0xB5, 0xAA, 0xA2, 0x4C, 0xB1, 0x15, 0x80, 0x87, 0x08, 0x80, 0x73, 0x66, 0x7C},
   {0x8D, 0x06, 0xE0, 0xE4, 0x04, 0x5B, 0xC2, 0xD7, 0xE1, 0x6C, 0xF5, 0xA9, 0xC8, 0xCC, 0x99, 0xFA, 0xA7, 0x42, 0x37, 0xB9, 0xAD, 0x3E, 0x1E, 0x96, 0xA7, 0x23, 0xE0, 0xD4, 0x1D, 0xAE, 0x3D, 0x24}},
  {{0xBD, 0x85, 0x0C, 0x31, 0xF4, 0xC4, 0x67, 0xF6, 0x28, 0x57, 0x48, 0x1E, 0x91, 0xEF, 0xBD, 0xEC, 0x20, 0x3B, 0x7C, 0xD0, 0x58, 0x9B, 0x5D, 0xC2, 0xA0, 0xD6, 0xA1, 0xF1, 0x6C, 0x07, 0xA7, 0x54},
   {0x9D, 0x71, 0x61, 0xDE, 0x5A, 0x52, 0xAA, 0x70, 0xE2, 0x8F, 0x2A, 0x94, 0x8B, 0x90, 0x6A, 0x4C, 0xC1, 0x2E, 0x43, 0x87, 0x48, 0xFB, 0xA1, 0x00, 0x97, 0x41, 0x79, 0x1A, 0x04, 0x81, 0x92, 0x4B},
   {0x35, 0x25, 0x57, 0xEB, 0xE0, 0xC1, 0x7B, 0x86, 0xE4, 0x65, 0x1F, 0xD0, 0x64, 0x08, 0x97, 0xF0, 0x78, 0x4E, 0xFF, 0x5D, 0xD4, 0xD2, 0x1D, 0xF8, 0x98, 0xFA, 0x79, 0x3F, 0x01, 0xDD, 0x61, 0x29},
   {0x86, 0xA7, 0x17, 0xAF, 0xF9, 0x47, 0x00, 0xDF, 0x77, 0xB8, 0x90, 0x60, 0xFC, 0x6B, 0x42, 0xE0, 0x30, 0x60, 0x79, 0xAC, 0x08, 0xD0, 0x21, 0xD3, 0x39, 0x67, 0xE9, 0xA5, 0xE9, 0xAA, 0x23, 0x48}},
  {{0x5F, 0xBF, 0x8E, 0x6C, 0x4F, 0x89, 0x40, 0xC8, 0xEE, 0x99, 0x7E, 0x4A, 0x52, 0x55, 0xDB, 0xA8, 0x25, 0x01, 0x81, 0x91, 0xE3, 0xBD, 0xDD, 0x72, 0xA7, 0x8C, 0x31, 0xF5, 0x9B, 0xEB, 0x57, 0x12},
   {0x23, 0x8E, 0xA4, 0xBA, 0xA9, 0xCB, 0x2D, 0xB8, 0x78, 0xD6, 0x59, 0xC6, 0xD2, 0xFF, 0x55, 0x98, 0x01, 0xE1, 0xA7, 0x76, 0xE5, 0xF7, 0x6C, 0xA9, 0x3C, 0xDB, 0xDD, 0x36, 0xAA, 0x74, 0x25, 0x77},
   {0x5A, 0xBD, 0x35, 0xB0, 0xF3, 0xED, 0x01, 0x8E, 0x3A, 0x29, 0x03, 0xDA, 0x07, 0x83, 0x0F, 0x96, 0xC4, 0xFE, 0xF5, 0xB1, 0xC0, 0xFE, 0x91, 0x2C, 0xD5, 0x44, 0x12, 0xF1, 0x0C, 0x95, 0x30, 0x3C},
   {0x79, 0xDD, 0xCB, 0xE0, 0x6F, 0x49, 0x7F, 0xD0, 0x1E, 0x9C, 0xDC, 0xD9, 0xDA, 0x05, 0x4F, 0x18, 0xC5, 0xF6, 0xA3, 0xD2, 0x16, 0x17, 0x04, 0x82, 0xC5, 0x7A, 0xF4, 0xC7, 0xB9, 0xCF, 0x24, 0x66}},
  {{0xDE, 0xBA, 0x4C, 0x4E, 0x32, 0x2A, 0xD5, 0xBD, 0x8D, 0x81, 0x4A, 0x5A, 0x9D, 0x3E, 0x96, 0xEA, 0x56, 0xC1, 0xAE, 0x06, 0xEB, 0xE2, 0x96, 0x21, 0x71, 0x3A, 0xAD, 0xCF, 0x5B, 0x97, 0x0A, 0x66},
   {0x9C, 0x4E, 0x75, 0xF2, 0x1E, 0xF2, 0xA5, 0x5F, 0x42, 0x24, 0x23, 0xE9, 0x7A, 0x42, 0xBF, 0xC0, 0x95, 0x50, 0xC8, 0xF3, 0x57, 0x3A, 0x28, 0xF7, 0x25, 0x2A, 0x1D, 0xFE, 0x8A, 0x2B, 0x38, 0x04},
   {0xFF, 0x78, 0xA6, 0x8C, 0xDF, 0x23, 0xE8, 0x07, 0x1D, 0x17, 0x5D, 0x22, 0xFC, 0xF4, 0xF0, 0x12, 0xF3, 0xB9, 0xBC, 0x93, 0x3F, 0x4D, 0x35, 0x9C, 0x54, 0x53, 0x0C, 0x6F, 0xB8, 0x3F, 0x8C, 0x57},
   {0x54, 0xFA, 0x07, 0x8F, 0x5F, 0xFA, 0xB2, 0x66, 0x7F, 0xB3, 0x3E, 0x29, 0xA6, 0x9B, 0x69, 0x51, 0xEA, 0xE8, 0xF7, 0xC8, 0xA4, 0x9F, 0x6D, 0x24, 0x17, 0x1F, 0xFE, 0x71, 0xD6, 0x4E, 0x1D, 0x22}},
  {{0x74, 0x24, 0x87, 0x29, 0xEE, 0x37, 0x33, 0xF1, 0xA7, 0x5C, 0x77, 0x9D, 0x94, 0x93, 0x2A, 0xA4, 0xC4, 0x49, 0x19, 0xD9, 0xD0, 0x18, 0x96, 0xED, 0x6D, 0x02, 0xA4, 0xD6, 0x85, 0x75, 0xBC, 0x73},
   {0xC2, 0x68, 0x4B, 0xEB, 0x22, 0xE8, 0x3C, 0xD9, 0x7B, 0xD9, 0xCB, 0xEE, 0x81, 0x84, 0x46, 0xC8, 0x03, 0xD0, 0x64, 0xC6, 0x8C, 0xD1, 0x30, 0x70, 0x00, 0x00, 0xD0, 0x73, 0x54, 0xA8, 0xCC, 0x37},
   {0xD1, 0x50, 0x51, 0xDB, 0xDB, 0xFE, 0xF6, 0xF9, 0x3A, 0x3A, 0x60, 0x33, 0x1B, 0x76, 0x71, 0x73, 0xFB, 0x46, 0xCA, 0xFF, 0xC6, 0x3F, 0xCD, 0x44, 0xFA, 0xA8, 0xE0, 0xFD, 0x2F, 0x90, 0x8E, 0x4F},
   {0x5F, 0x53, 0xC0, 0x5C, 0x02, 0x07, 0x1D, 0x9A, 0xF6, 0xA9, 0x23, 0x50, 0x8B, 0x3D, 0x40, 0x49, 0x3C, 0xB2, 0x5B, 0x26, 0xFD, 0x00, 0x0A, 0xD5, 0x35, 0x29, 0x1D, 0xA6, 0x78, 0x4D, 0x07, 0x5E}},
  {{0xD1, 0xD4, 0x33, 0xB1, 0x96, 0xE8, 0xCA, 0x6D, 0x8D, 0x2B, 0xC7, 0x11, 0xB5, 0xE1, 0x43, 0x50, 0x81, 0x4D, 0x9F, 0x26, 0x2A, 0x31, 0x28, 0xF9, 0x6F, 0xE4, 0x8E, 0x2E, 0xD3, 0x0D, 0xBA, 0x28},
   {0x1B, 0x4D, 0xB7, 0xF9, 0x26, 0x9D, 0x3D, 0xC2, 0x8F, 0xF4, 0x66, 0xB8, 0x88, 0x33, 0x70, 0x5C, 0x50, 0x8B, 0x46, 0x4F, 0xBB, 0xB8, 0xCF, 0x90, 0x0B, 0x6A, 0x77, 0x60, 0x40, 0x5B, 0xB6, 0x23},
   {0x93, 0x63, 0xF3, 0xF2, 0xFB, 0x82, 0x0F, 0x9F, 0x2D, 0x25, 0xD5, 0xBE, 0x35, 0x0A, 0xC9, 0x72, 0x6A, 0x47, 0x91, 0x87, 0x15, 0x6E, 0xAB, 0x48, 0x06, 0xE9, 0x62, 0x07, 0x98, 0xEC, 0x96, 0x52},
   {0x60, 0x9B, 0x02, 0x02, 0xB3, 0x56, 0x73, 0xC5, 0x8D, 0xED, 0xEC, 0xAE, 0x2A, 0x1E, 0xDC, 0x8D, 0x25, 0x10, 0xE4, 0x0E, 0x28, 0x6F, 0x6B, 0x4B, 0x8E, 0x1B, 0xD0, 0x4D, 0xDA, 0x33, 0xB1, 0x15}},
  {{0xA1, 0xB8, 0x09, 0xE0, 0xD0, 0xD5, 0x61, 0x64, 0xFE, 0x6B, 0xE3, 0xCC, 0x0E, 0x1E, 0x0C, 0x04, 0x86, 0x97, 0x0A, 0xC0, 0x9E, 0xBA, 0xFC, 0x7B, 0x2A, 0x2D, 0x27, 0xCD, 0xD0, 0x01, 0x5B, 0x36},
   {0x94, 0xC1, 0x58, 0x7A, 0x63, 0xE1, 0x45, 0xB3, 0x5A, 0xC0, 0x98, 0x2A, 0x86, 0x9F, 0x05, 0x65, 0x52, 0x1C, 0xE6, 0x3C, 0xD9, 0xCF, 0x43, 0x2D, 0x5C, 0x97, 0x87, 0xCE, 0x74, 0x7C, 0x50, 0x7A},
   {0xCB, 0x64, 0x49, 0x20, 0x49, 0x00, 0xEF, 0x1F, 0xF5, 0x29, 0xD9, 0xA6, 0xC6, 0xF8, 0xE1, 0x58, 0x16, 0x4B, 0xBA, 0xE2, 0x73, 0x2F, 0x81, 0x1F, 0x3A, 0x14, 0x9A, 0x2E, 0x2C, 0xB8, 0xB4, 0x51},
   {0xF1, 0xAF, 0x2D, 0x90, 0xF8, 0x2D, 0x92, 0xEB, 0xEE, 0xBE, 0xB9, 0x32, 0xB9, 0x89, 0x44, 0x53, 0x6E, 0x0F, 0xEF, 0xCA, 0x56, 0xCD, 0xC4, 0x06, 0xCA, 0x93, 0x87, 0x74, 0xAA, 0x0F, 0x82, 0x6E}},
  {{0xE9, 0x0D, 0xE5, 0xCC, 0x09, 0x67, 0x8D, 0xA0, 0x12, 0xF5, 0x36, 0x3B, 0xD7, 0x4D, 0x33, 0x50, 0x38, 0x77, 0x3F, 0x0E, 0xFA, 0xC0, 0x20, 0x85, 0xB9, 0x85, 0x8C, 0xD0, 0xE2, 0xE9, 0x7E, 0x5E},
   {0x8F, 0x7A, 0xB8, 0xF5, 0xF0, 0x4B, 0x16, 0x55, 0xAB, 0xF2, 0xBA, 0x86, 0x97, 0xE2, 0x29, 0xE3, 0x96, 0x30, 0x21, 0x2A, 0x42, 0xC6, 0x37, 0x3D, 0xEE, 0x83, 0x7F, 0x60, 0xAF, 0xF3, 0x61, 0x60},
   {0x32, 0x55, 0xE8, 0xFD, 0xE0, 0x0A, 0x45, 0x31, 0x43, 0x70, 0x37, 0x28, 0x81, 0x64, 0x93, 0xC7, 0x4A, 0x19, 0x82, 0x96, 0xC5, 0xF0, 0x41, 0x4B, 0x54, 0x43, 0xB5, 0x06, 0x88, 0x9F, 0x02, 0x3B},
   {0xBB, 0xCD, 0xA3, 0x69, 0x70, 0xDC, 0x58, 0x41, 0x12, 0x30, 0x54, 0x9D, 0xAC, 0x51, 0x07, 0x81, 0x6E, 0x8E, 0x8A, 0xF4, 0x36, 0x29, 0xC5, 0x68, 0xA1, 0x56, 0x10, 0x29, 0x16, 0xAC, 0xF8, 0x61}},
  {{0x8A, 0x40, 0x27, 0xBA, 0x88, 0x04, 0x3F, 0x7E, 0x6F, 0x69, 0x07, 0xAB, 0x84, 0xD5, 0xC0, 0x99, 0xB1, 0xF9, 0x9A, 0x70, 0x1B, 0x8B, 0xFB, 0xD3, 0x18, 0x8A, 0x0D, 0x82, 0xED, 0x89, 0x8D, 0x13},
   {0xCC, 0x94, 0xBB, 0xFC, 0x2C, 0xB6, 0xEC, 0x2F, 0xAB, 0xC1, 0xF2, 0x8E, 0x29, 0xB0, 0x70, 0xC0, 0xB7, 0x88, 0x82, 0x4D, 0x2A, 0x7F, 0x91, 0x83, 0xE8, 0xC3, 0x0E, 0x3D, 0x73, 0xB1, 0xD1, 0x7B},
   {0x64, 0x69, 0x85, 0x74, 0x73, 0xC2, 0x11, 0x51, 0x79, 0x3C, 0x66, 0x53, 0x3D, 0x55, 0xFE, 0x1F, 0x6B, 0x89, 0x61, 0xB1, 0x14, 0x88, 0x35, 0x2C, 0x3A, 0x11, 0x65, 0xF1, 0x13, 0x32, 0xA2, 0x63},
   {0xC5, 0xF9, 0x55, 0xAC, 0x48, 0xAE, 0xAB, 0xD1, 0x57, 0x77, 0x0E, 0x2F, 0x1A, 0x95, 0x27, 0x91, 0x01, 0xAF, 0x93, 0x3A, 0xF8, 0x24, 0xC0, 0x56, 0x80, 0x05, 0x0A, 0xB6, 0xF3, 0x7C, 0xA6, 0x13}},
  {{0x59, 0x2C, 0x1F, 0x2D, 0xED, 0xC7, 0x37, 0x78, 0x67, 0x0D, 0x26, 0x41, 0x0B, 0x15, 0x0D, 0x6B, 0x0B, 0xF5, 0x7D, 0x48, 0x2C, 0xA6, 0x19, 0x84, 0xEE, 0x40, 0xBE, 0x02, 0x1A, 0xAD, 0xDC, 0x21},
   {0x5C, 0xF9, 0xE8, 0xA2, 0x06, 0xAD, 0x44, 0x26, 0x0C, 0xE6, 0x6E, 0xB7, 0xF6, 0x17, 0x68, 0x23, 0x71, 0x2B, 0xF4, 0x3D, 0x35, 0x5B, 0xD9, 0x61, 0x46, 0x90, 0x1E, 0xA1, 0x6E, 0x1C, 0x47, 0x64},
   {0x74, 0xB7, 0x40, 0x70, 0xBD, 0x27, 0x45, 0x80, 0x1E, 0xE2, 0x59, 0x22, 0x07, 0xB6, 0x8D, 0x23, 0x96, 0x3C, 0xA7, 0x63, 0x71, 0xDE, 0x69, 0x91, 0x8F, 0xA6, 0xE5, 0xAB, 0x69, 0x76, 0x5A, 0x61},
   {0x63, 0xBA, 0x4E, 0x4D, 0x89, 0x2E, 0x4C, 0x95, 0xB5, 0x03, 0xDD, 0x9F, 0x2E, 0x74, 0x57, 0x22, 0x8E, 0x3A, 0x0F, 0x85, 0xE8, 0x9B, 0x36, 0xE9, 0xF7, 0x73, 0x27, 0x16, 0x4C, 0xE2, 0x35, 0x7E}},
  {{0x73, 0x4F, 0xC7, 0xE3, 0xA9, 0x93, 0x81, 0x4E, 0x5B, 0xB2, 0xBE, 0x07, 0xDA, 0x56, 0xE7, 0x61, 0xFD, 0x7C, 0x81, 0xE5, 0x62, 0x18, 0xDF, 0x8B, 0xAD, 0xEB, 0x2D, 0xEE, 0xEE, 0x5B, 0x97, 0x55},
   {0x01, 0x44, 0x13, 0xA0, 0xF5, 0x0A, 0xD0, 0x68, 0xAE, 0x36, 0x81, 0x68, 0xE6, 0x54, 0xC5, 0xD1, 0x73, 0xE2, 0x8B, 0xAC, 0xB7, 0xCC, 0xB6, 0x08, 0xCB, 0x61, 0x11, 0x80, 0x6F, 0xF0, 0x40, 0x38},
   {0xF8, 0x00, 0x22, 0x4E, 0x4D, 0xFB, 0x5D, 0xF2, 0x59, 0x39, 0xA5, 0xB1, 0x7C, 0xC7, 0x2F, 0x8C, 0x8C, 0x94, 0x6C, 0xC9, 0xD4, 0x8A, 0x71, 0xE6, 0x74, 0x38, 0x38, 0x03, 0xE7, 0x76, 0xFE, 0x16},
   {0xAF, 0x8A, 0x09, 0x3D, 0x01, 0xFC, 0x67, 0xC6, 0xE6, 0xA1, 0x6B, 0x91, 0x12, 0x70, 0x34, 0x93, 0x96, 0xBC, 0x4E, 0x52, 0xF1, 0x2A, 0x02, 0xAF, 0x1C, 0x66, 0x26, 0xE1, 0x0E, 0x9F, 0xF1, 0x06}},
  {{0x56, 0x95, 0xA3, 0x28, 0x91, 0xD4, 0xEF, 0x0A, 0x5A, 0x01, 0x28, 0xFD, 0xFA, 0xDC, 0x7F, 0x9F, 0xE6, 0xD5, 0x13, 0x36, 0xDB, 0x63, 0x35, 0x31, 0xBF, 0x3A, 0xE7, 0xAC, 0xDD, 0x0E, 0x9E, 0x4E},
   {0x89, 0x8A, 0x01, 0x38, 0x3F, 0x83, 0x41, 0xAC, 0x3F, 0xD7, 0x4B, 0xBA, 0xE6, 0x66, 0xF5, 0xD7, 0x35, 0xD2, 0xF4, 0xCD, 0xDE, 0x0B, 0x95, 0xB4, 0xF2, 0xE3, 0x96, 0x0B, 0xCB, 0x3A, 0x50, 0x10},
   {0xDC, 0x02, 0x63, 0xED, 0xDB, 0x95, 0xE0, 0xDC, 0x94, 0x3D, 0x85, 0x33, 0x45, 0xC4, 0xA7, 0xF4, 0x75, 0xE4, 0x1B, 0xC3, 0xAA, 0xC7, 0xE3, 0x58, 0xFC, 0xC0, 0x97, 0x2B, 0x92, 0x6A, 0x40, 0x6B},
   {0x1C, 0x8E, 0xB7, 0x4D, 0xDF, 0x0C, 0x74, 0x8C, 0x74, 0x3A, 0x1B, 0xDD, 0x6B, 0xC2, 0xB7, 0x81, 0xCB, 0x3E, 0x3E, 0xC0, 0xE2, 0x11, 0xB4, 0xDA, 0x50, 0x30, 0xF2, 0xD5, 0x08, 0xFE, 0xB3, 0x7C}},
  {{0x7A, 0x2F, 0x2B, 0x48, 0xAB, 0xF8, 0x54, 0x36, 0xBE, 0x74, 0xDE, 0xD3, 0x9A, 0xAB, 0x79, 0x5A, 0xBF, 0xA4, 0xB9, 0x9A, 0x5A, 0xEF, 0x97, 0x28, 0xF9, 0x8D, 0x5A, 0x74, 0x46, 0x77, 0x0F, 0x26},
   {0x10, 0x41, 0x7C, 0xFB, 0xC0, 0xF8, 0xB4, 0x5D, 0x19, 0x81, 0x50, 0xAC, 0x68, 0xAE, 0xA5, 0x3A, 0xFB, 0x03, 0x44, 0x76, 0x4C, 0x1D, 0x36, 0xD7, 0x63, 0x1B, 0x76, 0x38, 0xB4, 0x8D, 0xEB, 0x08},
   {0x92, 0x80, 0x7F, 0x49, 0xF7, 0xDF, 0xAE, 0xE8, 0x86, 0xDF, 0x67, 0x8E, 0x63, 0xC0, 0x29, 0x1E, 0x19, 0xD3, 0xF0, 0xC3, 0xD8, 0x00, 0x01, 0x1A, 0x40, 0xFE, 0x0C, 0x6C, 0xCB, 0x97, 0x32, 0x73},
   {0x56, 0x8C, 0x4A, 0x22, 0x88, 0x07, 0x74, 0x2B, 0x14, 0xB0, 0xF3, 0xFE, 0x71, 0xEC, 0x43, 0xC3, 0xA2, 0x30, 0x69, 0xB3, 0x44, 0x90, 0xAE, 0xEA, 0x41, 0x22, 0x42, 0x94, 0x50, 0x05, 0x48, 0x2F}},
  {{0x93, 0xBF, 0xEE, 0x13, 0x22, 0x8F, 0xBA, 0xE8, 0x44, 0x03, 0xC2, 0xAF, 0x94, 0xA2, 0x2A, 0x2F, 0xC2, 0x07, 0x5D, 0xE4, 0x5A, 0xB7, 0xA3, 0x62, 0x5E, 0x66, 0x84, 0x8B, 0xD1, 0x2F, 0x5B, 0x65},
   {0x12, 0x3F, 0xAF, 0xA0, 0x66, 0x01, 0xBA, 0xC2, 0x6F, 0xF8, 0x13, 0xDB, 0xE4, 0xCB, 0x01, 0xD3, 0xD3, 0x6C, 0x6B, 0x46, 0xE9, 0x45, 0xB1, 0x83, 0xE4, 0x1B, 0xFE, 0x57, 0xC1, 0x2B, 0x0F, 0x23},
   {0xB3, 0xE9, 0xA4, 0x47, 0x90, 0x54, 0x5E, 0xE4, 0x53, 0x79, 0x65, 0xCE, 0x54, 0x4A, 0x93, 0x12, 0xE4, 0x02, 0x22, 0xA0, 0xC0, 0xB6, 0xC3, 0x88, 0x8A, 0x9B, 0x80, 0xE2, 0xDC, 0x8D, 0x60, 0x4E},
   {0x0A, 0x1A, 0x0B, 0x7C, 0x8C, 0x6E, 0x68, 0xED, 0x7C, 0x96, 0x2F, 0xA7, 0x32, 0x32, 0x0D, 0x9E, 0x48, 0xE1, 0x73, 0x96, 0x0D, 0x3E, 0x02, 0xB3, 0x07, 0x9E, 0x66, 0x8F, 0x11, 0x96, 0xBA, 0x73}},
  {{0xAE, 0x09, 0x3E, 0x05, 0xC6, 0xAE, 0xA5, 0x1D, 0x50, 0x72, 0x9B, 0x7C, 0x16, 0x3C, 0x61, 0xF1, 0x63, 0x50, 0x10, 0x70, 0xA9, 0xAD, 0x7B, 0x5A, 0x73, 0xD5, 0xEA, 0x83, 0xAA, 0x64, 0xD5, 0x26},
   {0xCA, 0x58, 0x78, 0xDA, 0x15, 0x64, 0x05, 0xB9, 0x67, 0x5B, 0x38, 0xFB, 0xBA, 0x67, 0x8A, 0x9E, 0x7D, 0x2E, 0x87, 0x25, 0x0B, 0xE8, 0x1C, 0x2A, 0x35, 0x0B, 0x54, 0xBE, 0xEA, 0xBA, 0x8F, 0x5E},
   {0xA5, 0x22, 0x3E, 0x2F, 0x98, 0x71, 0x62, 0x1E, 0xF9, 0x2A, 0xD2, 0xF1, 0x52, 0x84, 0x93, 0xF7, 0xEC, 0x49, 0x86, 0xDB, 0x8E, 0x35, 0xC4, 0xD0, 0x1D, 0x70, 0xFC, 0x86, 0xCF, 0x2D, 0x54, 0x01},
   {0xA6, 0xE0, 0x1A, 0x17, 0xA7, 0xD0, 0xC2, 0x66, 0x72, 0x9A, 0x0C, 0xA3, 0xB9, 0x7D, 0xE1, 0x4B, 0xCD, 0xD7, 0x30, 0x60, 0xC0, 0x67, 0x8F, 0x01, 0x94, 0xF3, 0xBD, 0x44, 0xB3, 0xE6, 0x62, 0x4D}},
  {{0x4F, 0x06, 0x64, 0x1D, 0xC0, 0xEB, 0x34, 0x5D, 0x06, 0x88, 0x6E, 0xBA, 0x20, 0x2C, 0x48, 0x6C, 0x35, 0x06, 0xE7, 0x7B, 0xE5, 0x05, 0x1F, 0x2D, 0xF6, 0x0B, 0x1C, 0xF5, 0x38, 0xE3, 0x63, 0x20},
   {0x8F, 0x97, 0x45, 0xAD, 0x6D, 0x7E, 0xEE, 0xEA, 0xAA, 0x6F, 0x7F, 0x84, 0x6D, 0x9A, 0x95, 0xA4, 0xF8, 0xE0, 0x54, 0x27, 0x26, 0x97, 0xF1, 0x22, 0x61, 0x7E, 0x0A, 0x6E, 0x46, 0x8A, 0x84, 0x2A},
   {0xC9, 0x98, 0x4D, 0x30, 0x6F, 0x11, 0xAD, 0xD9, 0xCB, 0x5F, 0xD8, 0x05, 0xEB, 0x30, 0x50, 0x52, 0x01, 0x12, 0x89, 0x35, 0xD6, 0xD7, 0xDB, 0xA3, 0xDC, 0x59, 0xEC, 0x4E, 0xC8, 0xCE, 0xA2, 0x65},
   {0xA6, 0x7C, 0xAD, 0xD2, 0x4C, 0xC1, 0xFE, 0x42, 0x28, 0x0E, 0x61, 0x17, 0x28, 0x61, 0x91, 0x38, 0x9A, 0xD3, 0x7A, 0x09, 0x2B, 0x9A, 0xE8, 0x5F, 0x9B, 0xC0, 0x50, 0xFB, 0x44, 0xA6, 0x06, 0x5C}},
  {{0xA9, 0xC9, 0x94, 0x3B, 0x2D, 0xC5, 0x00, 0x79, 0xA9, 0x1F, 0x14, 0xE9, 0x66, 0x91, 0x82, 0xBB, 0xB2, 0x2E, 0x71, 0x7B, 0x88, 0xD9, 0xA0, 0xD7, 0x8F, 0xBE, 0xFA, 0x9E, 0x57, 0xD3, 0xEF, 0x06},
   {0x85, 0x61, 0xF0, 0x38, 0xD8, 0xEF, 0x7B, 0xFC, 0xB7, 0x6E, 0xA2, 0xFD, 0xAA, 0x04, 0x4F, 0x74, 0x94, 0x4B, 0x22, 0x1B, 0x15, 0x16, 0x9B, 0x88, 0x70, 0xFB, 0xF2, 0x0E, 0x45, 0xC2, 0x8F, 0x35},
   {0x1A, 0xF8, 0x9D, 0x01, 0x28, 0x6D, 0xBD, 0x6C, 0x62, 0xD9, 0xA1, 0xA8, 0x83, 0xCC, 0xB1, 0x18, 0x5E, 0xB9, 0xC2, 0xB3, 0x33, 0x03, 0x44, 0xCE, 0x4F, 0x76, 0x33, 0x94, 0xDE, 0x80, 0x16, 0x72},
   {0x81, 0x16, 0x96, 0x5F, 0xF0, 0x7E, 0xE0, 0xEF, 0xA9, 0xFE, 0x44, 0x62, 0xB2, 0xB7, 0x35, 0x86, 0x94, 0x3B, 0x33, 0x15, 0x12, 0x31, 0x3E, 0xC7, 0x93, 0x30, 0xA9, 0x53, 0x5E, 0x22, 0xA4, 0x56}},
  {{0x05, 0x09, 0xC5, 0xA3, 0xE1, 0x44, 0xBC, 0xBE, 0xBE, 0xE4, 0xCE, 0xC3, 0x38, 0xFC, 0x3A, 0x6B, 0x60, 0x65, 0xC5, 0xDF, 0x17, 0x61, 0x28, 0x69, 0x7C, 0x1A, 0xD2, 0xC7, 0xF8, 0xF7, 0xFF, 0x55},
   {0x63, 0xB2, 0x1E, 0xF7, 0x7A, 0x14, 0x5E, 0x28, 0x72, 0x8B, 0xF6, 0xE7, 0x61, 0xC1, 0xF6, 0xC4, 0x42, 0x8F, 0xD4, 0x0E, 0x63, 0xFB, 0xDA, 0xA3, 0xBB, 0x50, 0x12, 0x4C, 0x77, 0x59, 0x80, 0x09},
   {0x0A, 0x66, 0x1B, 0xD0, 0x07, 0xFA, 0x50, 0xE3, 0xF5, 0x26, 0xC6, 0xCC, 0x7E, 0xF9, 0x1C, 0xA6, 0x1B, 0x0F, 0xB6, 0x00, 0x87, 0x93, 0x7A, 0x23, 0xF3, 0xCC, 0x8B, 0x3E, 0x72, 0xDA, 0xF5, 0x46},
   {0x53, 0x83, 0x4E, 0x89, 0x1E, 0xB3, 0x91, 0x5F, 0xB2, 0x28, 0x25, 0xC0, 0x59, 0xA2, 0x5C, 0x02, 0x0B, 0x0E, 0x72, 0xE0, 0x1E, 0x6C, 0xE6, 0x1B, 0x1E, 0x68, 0xD0, 0xFA, 0x00, 0x70, 0x39, 0x6A}},
  {{0xE1, 0x28, 0x84, 0x33, 0xDF, 0x07, 0x84, 0xA4, 0x34, 0x3B, 0x00, 0x1A, 0x50, 0x60, 0xBD, 0x95, 0x47, 0x20, 0x8B, 0x8B, 0xFE, 0x18, 0x18, 0x43, 0x4E, 0xC8, 0xCE, 0x3C, 0x7B, 0xE3, 0x57, 0x02},
   {0x0A, 0x50, 0xB8, 0xA4, 0x2F, 0x7A, 0xEA, 0xB5, 0xC0, 0xC2, 0x16, 0x0C, 0x21, 0x49, 0x0A, 0x77, 0xE1, 0x0A, 0xD5, 0x33, 0xFB, 0x7F, 0x0B, 0x95, 0xAE, 0x55, 0x9B, 0x4B, 0xE8, 0x57, 0xA4, 0x1C},
   {0xE8, 0x37, 0x5C, 0x93, 0xAE, 0x01, 0x91, 0x4D, 0xCD, 0x71, 0xD9, 0xD2, 0x0F, 0xDD, 0x82, 0xE2, 0xE1, 0x07, 0xF0, 0x53, 0x84, 0xD0, 0x5E, 0x4C, 0x14, 0xAD, 0xD9, 0x87, 0xA8, 0xA1, 0x3C, 0x51},
   {0x28, 0xE3, 0xB4, 0xAD, 0x54, 0x33, 0x22, 0xB8, 0x74, 0xFC, 0x5F, 0x25, 0x43, 0x0A, 0xA1, 0xCF, 0x77, 0x2B, 0x9B, 0x94, 0x1C, 0x37, 0x24, 0xEA, 0xFE, 0xAA, 0xD7, 0xFC, 0xE6, 0x3A, 0x41, 0x4B}},
  {{0x0D, 0x9D, 0xD4, 0x71, 0x44, 0x0F, 0x84, 0x33, 0x09, 0x39, 0x2D, 0xA5, 0x3C, 0x7D, 0x20, 0x91, 0x18, 0x01, 0x97, 0x2C, 0xF3, 0x95, 0x00, 0x20, 0xB2, 0x64, 0x03, 0x2A, 0x49, 0x0A, 0x4C, 0x10},
   {0x17, 0x89, 0x8E, 0x3E, 0xD8, 0xAD, 0x5B, 0xE7, 0x32, 0xC1, 0x40, 0x3C, 0x0F, 0xB5, 0xBC, 0xC8, 0xF0, 0x13, 0xD9, 0x9E, 0x3D, 0x03, 0x71, 0x2A, 0x60, 0x4E, 0x21, 0x29, 0x27, 0x43, 0x4E, 0x19},
   {0x42, 0x53, 0xD7, 0xE8, 0xF4, 0x63, 0xA9, 0x89, 0xFD, 0x75, 0xD7, 0x07, 0x34, 0xFB, 0x12, 0xA1, 0x8F, 0x26, 0xBD, 0x31, 0x1A, 0xE4, 0x67, 0x58, 0x45, 0x57, 0x56, 0xA4, 0x34, 0x2E, 0x59, 0x5C},
   {0x60, 0x79, 0x51, 0xF3, 0x36, 0x48, 0x25, 0xE7, 0x93, 0x3E, 0xA8, 0x14, 0xD8, 0x49, 0xD2, 0xFF, 0x9E, 0xF9, 0xC1, 0x54, 0x96, 0xE0, 0xE9, 0x27, 0x67, 0x66, 0x1D, 0xAA, 0xD5, 0xF4, 0xDC, 0x1C}},
  {{0x8B, 0x23, 0xFE, 0x29, 0x9A, 0x5F, 0x0E, 0x73, 0x5E, 0x58, 0x29, 0x4A, 0xC4, 0x34, 0x35, 0xC6, 0x47, 0xAE, 0xA6, 0x45, 0xEE, 0x82, 0xF7, 0x09, 0xDF, 0x61, 0xB4, 0x08, 0x4D, 0x81, 0xC4, 0x6A},
   {0x03, 0x04, 0x62, 0x96, 0x79, 0x3C, 0x06, 0x9F, 0x99, 0x53, 0xD4, 0xBA, 0xDA, 0x5C, 0x83, 0x45, 0xBD, 0x39, 0x3C, 0xDE, 0x40, 0xDE, 0xBE, 0x43, 0x79, 0x47, 0x0E, 0x7B, 0xEA, 0x0B, 0x4E, 0x13},
   {0x6A, 0x02, 0xF4, 0x6E, 0x13, 0xF7, 0x32, 0x7A, 0x68, 0x31, 0xCB, 0x35, 0x61, 0x4C, 0xDC, 0xF0, 0xF6, 0xAE, 0x84, 0xAD, 0xE7, 0x16, 0x7F, 0xCD, 0x0D, 0xD9, 0x4B, 0xF9, 0x90, 0x71, 0xE0, 0x53},
   {0xBB, 0x50, 0xB6, 0x31, 0xC1, 0x44, 0xD1, 0xC3, 0xC8, 0x92, 0x6D, 0xF6, 0xFA, 0xA5, 0x3D, 0x89, 0x6B, 0xBC, 0x0C, 0x50, 0x5E, 0x8B, 0xF7, 0x45, 0xCA, 0x83, 0xFC, 0xBD, 0x2F, 0x2F, 0x28, 0x41}},
  {{0x42, 0xF9, 0x6C, 0x58, 0xE6, 0xBB, 0xEB, 0xF6, 0x06, 0x54, 0xBC, 0xDF, 0x05, 0xAD, 0x52, 0x75, 0xBD, 0x6B, 0xDA, 0xDF, 0x77, 0x7D, 0xE4, 0x8C, 0xEB, 0x0C, 0xAA, 0x72, 0x6E, 0x14, 0x77, 0x11},
   {0xE0, 0xDC, 0xF5, 0xD3, 0x5C, 0xE4, 0xC0, 0xA7, 0x75, 0xBB, 0xFA, 0xB7, 0xC7, 0xE4, 0x9C, 0x5D, 0xE6, 0x1A, 0x89, 0x00, 0x0A, 0x57, 0xE4, 0xCC, 0x65, 0xF9, 0xFD, 0x25, 0xA9, 0xEB, 0x00, 0x6C},
   {0x47, 0x90, 0x54, 0xDA, 0xF2, 0x4C, 0x8C, 0xB6, 0x41, 0x76, 0xFE, 0xAA, 0x03, 0xF9, 0xC8, 0x62, 0xF5, 0x44, 0x3C, 0x5A, 0x3D, 0x61, 0x68, 0x67, 0xEE, 0x88, 0xF5, 0x04, 0x52, 0x22, 0x86, 0x06},
   {0x3E, 0x77, 0x6F, 0x3C, 0xFD, 0x46, 0xF5, 0xAE, 0x5B, 0x9C, 0xF8, 0xAE, 0x62, 0xA8, 0x97, 0x7E, 0x37, 0x2F, 0x31, 0x2E, 0xD9, 0xD3, 0x42, 0xF9, 0xFA, 0xCD, 0x8A, 0xD9, 0x24, 0xFA, 0x59, 0x7E}},
  {{0x5A, 0x3C, 0xBD, 0x46, 0x3D, 0xD3, 0xF4, 0xE1, 0x2F, 0xF6, 0xE5, 0xAE, 0x6D, 0xD2, 0x1C, 0x15, 0x31, 0x26, 0xE2, 0x23, 0x05, 0x11, 0x14, 0x53, 0xDA, 0xCF, 0x9B, 0x89, 0xC3, 0xA4, 0x36, 0x2A},
   {0xC3, 0x03, 0x77, 0xAF, 0x5B, 0xF7, 0x5B, 0x26, 0x94, 0x84, 0xFC, 0x0D, 0xEF, 0x00, 0x2C, 0x08, 0xBA, 0xB5, 0xDC, 0x30, 0x71, 0x65, 0x56, 0x2A, 0x7A, 0xD4, 0xD0, 0x75, 0x1A, 0xF7, 0x66, 0x5D},
   {0xD0, 0x2B, 0xC9, 0x79, 0xF9, 0x97, 0xD1, 0x81, 0xF7, 0xBF, 0x47, 0xCC, 0xA1, 0xFA, 0x71, 0x95, 0x14, 0x57, 0xA3, 0x99, 0xAA, 0xF4, 0x4B, 0x6B, 0x71, 0xBA, 0x38, 0xB0, 0x4C, 0x1B, 0xD0, 0x7E},
   {0x63, 0x27, 0xC4, 0xC6, 0x62, 0x07, 0x16, 0xB8, 0xCC, 0x5B, 0x2A, 0x9C, 0x77, 0x4C, 0x11, 0x06, 0x69, 0x76, 0x6C, 0x72, 0xAC, 0x97, 0xDE, 0x26, 0x04, 0xBB, 0x36, 0x5E, 0xA6, 0x1B, 0x91, 0x7F}},
  {{0x21, 0xE4, 0x4A, 0xFB, 0x88, 0xAB, 0x90, 0x72, 0x82, 0xC3, 0x38, 0x4C, 0xB9, 0x9B, 0xD0, 0xB8, 0x00, 0xEE, 0xFB, 0xC0, 0x9B, 0xDF, 0x1C, 0x6E, 0x65, 0x93, 0x2F, 0x5D, 0x05, 0xFA, 0xDE, 0x32},
   {0x5D, 0x17, 0x38, 0x81, 0xAD, 0x9D, 0x4C, 0xEE, 0xC5, 0x86, 0x0E, 0x1B, 0x04, 0x04, 0x83, 0x79, 0xB7, 0x3D, 0x95, 0x98, 0x66, 0xBC, 0x1A, 0x93, 0xBB, 0x30, 0xDF, 0x10, 0xF8, 0x61, 0xBF, 0x4A},
   {0x46, 0x50, 0x68, 0x77, 0x2F, 0x2E, 0x53, 0x73, 0x34, 0x1E, 0xF3, 0x7E, 0x87, 0x1C, 0x39, 0xCA, 0x37, 0x7E, 0xC4, 0x4C, 0xBD, 0x83, 0x8D, 0x1F, 0x6E, 0xDB, 0xA1, 0x45, 0x22, 0x8B, 0x2C, 0x50},
   {0xB8, 0xE1, 0x80, 0x48, 0xCE, 0x06, 0x8D, 0x64, 0xA7, 0xA5, 0xAC, 0xAB, 0xC8, 0x25, 0xF5, 0x10, 0x60, 0xE2, 0xBC, 0x3B, 0x18, 0xA2, 0xBA, 0xFF, 0x58, 0x6C, 0x52, 0x05, 0x01, 0xE0, 0xB2, 0x3A}},
  {{0x18, 0x34, 0xF1, 0x6C, 0x0C, 0xA8, 0x1B, 0xE1, 0x75, 0x61, 0x1D, 0xC5, 0x8B, 0x48, 0x8C, 0xDE, 0x4B, 0xBC, 0x34, 0xC4, 0x47, 0x31, 0xB9, 0xF4, 0x19, 0x98, 0xF2, 0xC4, 0x64, 0x5E, 0xED, 0x20},
   {0x7A, 0xA9, 0xE1, 0x7C, 0x55, 0xA5, 0x4F, 0x59, 0x98, 0xFD, 0x4B, 0x2A, 0xF6, 0x54, 0x04, 0x7F, 0x3C, 0x84, 0x4B, 0x15, 0x3C, 0xA2, 0x8A, 0x7A, 0x9B, 0x24, 0xD2, 0x47, 0x79, 0xF8, 0xC8, 0x68},
   {0xBC, 0xA3, 0xE3, 0xDF, 0x21, 0xC8, 0xE0, 0x24, 0x92, 0xB5, 0x55, 0x51, 0x10, 0x6A, 0x89, 0xC2, 0x90, 0xF2, 0x7C, 0xE5, 0xA1, 0x18, 0x5F, 0x3E, 0xBF, 0x25, 0x7F, 0xA8, 0xDB, 0x31, 0xCE, 0x15},
   {0x67, 0xB4, 0x9B, 0xAD, 0x9C, 0xC7, 0x57, 0x94, 0x55, 0xD0, 0x2A, 0xE3, 0x58, 0x0A, 0x0F, 0x39, 0x1D, 0xBD, 0x88, 0xDC, 0xD4, 0xE9, 0x43, 0x67, 0x99, 0x3C, 0xFF, 0xC3, 0x0C, 0x59, 0xF8, 0x77}},
  {{0x83, 0xDB, 0x27, 0xDE, 0xA2, 0xCE, 0x4C, 0x0E, 0x71, 0x34, 0x58, 0xAF, 0xC9, 0xBA, 0x49, 0x00, 0x00, 0xA7, 0x37, 0xA5, 0x02, 0x11, 0x2B, 0xFB, 0xB2, 0x02, 0x3C, 0xCB, 0xA9, 0xCC, 0xFA, 0x64},
   {0xF7, 0xDF, 0x7D, 0xCB, 0x2A, 0x05, 0x82, 0x38, 0xA5, 0x87, 0x85, 0xDC, 0x32, 0xC5, 0xA2, 0xF9, 0x3A, 0x86, 0x27, 0xCD, 0xB2, 0x29, 0x2A, 0x27, 0xFD, 0x80, 0x13, 0x4E, 0x70, 0x1D, 0x69, 0x26},
   {0xCD, 0x6A, 0x19, 0x0C, 0x4B, 0x1A, 0xED, 0x32, 0x63, 0xC5, 0x97, 0xF3, 0x7F, 0xA9, 0x14, 0x98, 0xDC, 0xBE, 0xF1, 0xC5, 0xA4, 0xB1, 0x9F, 0xA3, 0xF9, 0x14, 0x2C, 0xA7, 0x74, 0x11, 0xDE, 0x72},
   {0x15, 0xC3, 0x0B, 0xBC, 0x2C, 0x16, 0x60, 0x08, 0x01, 0x04, 0x15, 0x90, 0x16, 0x91, 0x82, 0x11, 0x41, 0xB2, 0x25, 0x2B, 0x77, 0x43, 0x03, 0xB5, 0xC0, 0xE1, 0x31, 0x3C, 0x69, 0x51, 0x0F, 0x22}},
  {{0x7A, 0x7D, 0x0B, 0x61, 0xF6, 0x65, 0x0F, 0x5D, 0x27, 0x25, 0xEE, 0x2D, 0x45, 0x92, 0x81, 0x0F, 0xB6, 0xDB, 0xF9, 0x43, 0x00, 0x96, 0xB7, 0x80, 0x11, 0xCA, 0x11, 0x74, 0x0B, 0xD6, 0xE4, 0x69},
   {0x4C, 0x56, 0xBF, 0x2F, 0x29, 0xC0, 0x39, 0x8C, 0x0A, 0x73, 0x01, 0xD1, 0xF4, 0x9C, 0x75, 0x8F, 0x73, 0xAA, 0x74, 0x5E, 0x42, 0x10, 0x18, 0x60, 0x73, 0x95, 0xD8, 0xCC, 0xD7, 0x81, 0x6A, 0x33},
   {0x84, 0x87, 0x65, 0x40, 0x6F, 0x48, 0x8E, 0x17, 0x82, 0xDF, 0x75, 0x10, 0xD5, 0x30, 0x36, 0xE5, 0xA1, 0xB9, 0x32, 0x69, 0xAF, 0x1E, 0xC1, 0x8F, 0x87, 0x4B, 0x25, 0x53, 0x19, 0xD6, 0x05, 0x5B},
   {0x4B, 0x03, 0x3A, 0x7D, 0xF8, 0xAA, 0xE5, 0x29, 0xE4, 0x0E, 0x1C, 0xC6, 0xBF, 0x59, 0x5F, 0x19, 0x45, 0xE9, 0x69, 0x37, 0x63, 0xA9, 0xCE, 0x9C, 0x13, 0x4A, 0x28, 0x25, 0x5E, 0xE0, 0x11, 0x0E}},
  {{0xEB, 0xF6, 0xC2, 0x54, 0x3A, 0x3B, 0x59, 0x8F, 0x3C, 0xC7, 0x0F, 0xE8, 0xD7, 0x26, 0x17, 0xE5, 0xE0, 0x9A, 0xCC, 0x8E, 0x13, 0xD3, 0xA3, 0x59, 0x79, 0xEA, 0x95, 0x8B, 0x58, 0x47, 0x14, 0x58},
   {0x86, 0x21, 0x8D, 0xA6, 0x90, 0x5C, 0xEC, 0x2B, 0x30, 0xE5, 0x64, 0x5C, 0x17, 0x6A, 0xAD, 0xFA, 0x11, 0x4D, 0x3E, 0x52, 0x88, 0xA2, 0xD6, 0x43, 0x50, 0x11, 0xA6, 0x6C, 0xA6, 0x1A, 0x16, 0x4E},
   {0xE4, 0xA9, 0xBD, 0x8F, 0xF2, 0x2B, 0x38, 0x0C, 0x9A, 0xB3, 0x10, 0x45, 0x43, 0x7D, 0xA1, 0xD8, 0xA0, 0x0C, 0xAA, 0xD6, 0x54, 0x34, 0x59, 0x0A, 0xCA, 0x8A, 0xDD, 0xA2, 0x56, 0x3F, 0xDB, 0x18},
   {0x34, 0x72, 0xD0, 0x9A, 0x81, 0x25, 0xC1, 0x95, 0xFA, 0xEC, 0x4D, 0x50, 0xB7, 0x51, 0x96, 0xFD, 0x90, 0xBD, 0x1E, 0x91, 0x3A, 0xB8, 0x6C, 0x52, 0xA0, 0x2E, 0xFE, 0xB4, 0x47, 0x6B, 0x58, 0x01}},
  {{0x4D, 0xA5, 0x8B, 0x15, 0xC8, 0x71, 0x97, 0xB1, 0x8E, 0x27, 0x01, 0x36, 0x1A, 0xE8, 0x59, 0xE8, 0x15, 0xAB, 0x5F, 0xD7, 0x0C, 0x03, 0x07, 0x03, 0xA4, 0x58, 0x56, 0xFC, 0x9A, 0x34, 0x43, 0x66},
   {0x7D, 0xFD, 0x68, 0xDC, 0x30, 0x1C, 0x36, 0xD1, 0xF1, 0x35, 0xA7, 0x0D, 0x9F, 0xCF, 0x35, 0xBD, 0x1E, 0xB0, 0x86, 0x8C, 0x5F, 0xC0, 0x33, 0x9E, 0xEA, 0xF9, 0xE1, 0x2F, 0x9F, 0x37, 0x25, 0x5A},
   {0xBE, 0x02, 0x8D, 0x31, 0x22, 0xF7, 0x4E, 0xC8, 0x37, 0x41, 0x99, 0xFB, 0x91, 0xDB, 0x8E, 0x70, 0xB3, 0x34, 0x7B, 0xED, 0xCC, 0xD8, 0x29, 0x37, 0x4A, 0xA5, 0x97, 0xD7, 0x34, 0xAA, 0x56, 0x1B},
   {0x50, 0x98, 0x6F, 0x52, 0xE2, 0x92, 0x6E, 0xEF, 0x7A, 0x99, 0x2F, 0x3B, 0xAB, 0xF0, 0x88, 0x84, 0x85, 0x06, 0xA0, 0xCE, 0x26, 0x88, 0x6F, 0xB3, 0x3A, 0xE2, 0x32, 0xF0, 0xB4, 0xF6, 0xAD, 0x73}},
  {{0xDE, 0xF8, 0xF2, 0xE4, 0x18, 0xE7, 0xC2, 0x57, 0x78, 0x27, 0x85, 0x77, 0x5C, 0x74, 0x1F, 0xFD, 0x77, 0x8A, 0xD2, 0x4A, 0x07, 0x29, 0xC0, 0x91, 0xDD, 0x3F, 0x67, 0x2C, 0x3B, 0xEA, 0xC0, 0x26},
   {0x54, 0x42, 0xB3, 0x70, 0xB7, 0xED, 0x71, 0xEF, 0xC6, 0xDE, 0x31, 0x0E, 0x62, 0x51, 0x34, 0xFC, 0x34, 0xB5, 0x42, 0xB9, 0xE5, 0x9D, 0x77, 0x5E, 0xC5, 0x08, 0x82, 0x69, 0xA3, 0x4A, 0xD5, 0x7F},
   {0x15, 0x37, 0xDC, 0xE5, 0x0D, 0xD6, 0xD7, 0x15, 0xC9, 0xE5, 0x6A, 0xF6, 0x7E, 0x21, 0xA8, 0x58, 0x5F, 0xB2, 0x84, 0x01, 0x56, 0xBA, 0x2B, 0xDA, 0xAE, 0xF8, 0x89, 0xC9, 0xB3, 0x42, 0x82, 0x6C},
   {0x59, 0x65, 0x81, 0xA3, 0x5A, 0x7F, 0xDF, 0xCB, 0x1B, 0x6A, 0xB0, 0xDE, 0xCD, 0x27, 0xD9, 0x3C, 0xB4, 0x26, 0x5C, 0x57, 0xAB, 0x65, 0xB4, 0x9D, 0x3A, 0x9B, 0xC8, 0x7E, 0xC7, 0x99, 0x11, 0x57}},
  {{0xC7, 0xA9, 0xDD, 0xB3, 0x27, 0x82, 0x71, 0xBE, 0x8D, 0xB8, 0x2C, 0x77, 0x4F, 0xCF, 0xB9, 0xC0, 0xE0, 0x91, 0x8A, 0xD6, 0x13, 0xB3, 0xD3, 0x06, 0xF6, 0xCE, 0x1A, 0x1F, 0x95, 0x0B, 0x67, 0x57},
   {0x35, 0x71, 0x6B, 0x7D, 0x61, 0x9A, 0xEF, 0xEE, 0x25, 0xBC, 0x3B, 0xF0, 0x06, 0xF6, 0x89, 0x77, 0xFA, 0x5E, 0xFF, 0x34, 0x17, 0x9A, 0xE9, 0xEC, 0x9C, 0xA8, 0xF4, 0x83, 0xDA, 0xD3, 0xBD, 0x4B},
   {0xFE, 0x81, 0x3A, 0x7F, 0x38, 0x0C, 0x54, 0x1C, 0xD6, 0xCE, 0x92, 0x2E, 0xEE, 0xDD, 0x77, 0x52, 0x73, 0x17, 0x74, 0x80, 0xF0, 0xFA, 0x1B, 0xA5, 0xE5, 0x11, 0x9B, 0xA2, 0x9A, 0xD5, 0xF4, 0x51},
   {0x5F, 0x42, 0xB9, 0xC9, 0x9D, 0xCB, 0x3D, 0x85, 0x78, 0x37, 0x0D, 0xBC, 0x54, 0x18, 0x33, 0x55, 0x80, 0x93, 0x6D, 0xD2, 0x02, 0x92, 0x1C, 0xA0, 0xC4, 0xE1, 0xF0, 0xA8, 0xE7, 0xC4, 0x66, 0x7C}},
  {{0x89, 0x38, 0xA2, 0x9B, 0xC5, 0x1B, 0x9A, 0x89, 0xDB, 0x12, 0xDF, 0xED, 0xE2, 0xEA, 0x02, 0x6B, 0xE9, 0x6E, 0x03, 0x84, 0xBB, 0x4C, 0x8B, 0x41, 0xBA, 0x0E, 0x0A, 0xF5, 0x91, 0xFC, 0xAD, 0x37},
   {0xD1, 0xED, 0x3A, 0x98, 0x23, 0xDC, 0x9C, 0x1A, 0x05, 0x23, 0x95, 0x1A, 0x3F, 0x44, 0xE0, 0x1A, 0x30, 0x4F, 0xF1, 0x2C, 0x35, 0x58, 0x3A, 0xCD, 0xF9, 0x09, 0xFF, 0x5A, 0x57, 0x12, 0xB0, 0x3A},
   {0xAB, 0x6C, 0xDF, 0x30, 0xDC, 0xD6, 0x61, 0xAE, 0x9D, 0x35, 0x2E, 0xCC, 0x59, 0x43, 0x53, 0x75, 0x4F, 0xF5, 0x64, 0x37, 0x58, 0x06, 0x21, 0x0E, 0x6C, 0x56, 0x1D, 0xA2, 0x2F, 0x69, 0x2D, 0x4D},
   {0xE3, 0x8B, 0x78, 0x5E, 0xFB, 0x1D, 0xBE, 0x56, 0x95, 0x1B, 0x99, 0xEB, 0x85, 0xCD, 0xAE, 0xAD, 0x08, 0x1A, 0x2E, 0x01, 0x77, 0xC9, 0xE6, 0x85, 0x59, 0x6B, 0xD6, 0x64, 0xDD, 0x0B, 0x7A, 0x36}},
  {{0xE5, 0x48, 0x7C, 0xD4, 0xF7, 0x44, 0x90, 0x3C, 0x2E, 0x2D, 0x92, 0x76, 0xBE, 0x06, 0xE1, 0x14, 0xB7, 0x76, 0xAE, 0x6C, 0x90, 0x67, 0x5C, 0xDE, 0x5C, 0x1A, 0x1E, 0x19, 0xCE, 0xE9, 0x69, 0x62},
   {0x9A, 0x82, 0xB2, 0xF2, 0x9C, 0x0A, 0xCF, 0xC7, 0x53, 0xE8, 0x25, 0xE8, 0xA2, 0x80, 0x8D, 0x32, 0x8A, 0x34, 0x31, 0xE9, 0xBB, 0xF1, 0x31, 0x74, 0xCA, 0xF2, 0x8D, 0x50, 0xB6, 0xDE, 0x88, 0x18},
   {0xD2, 0xE3, 0x9E, 0x21, 0xB8, 0x5A, 0x36, 0x44, 0x48, 0x82, 0xDE, 0xB3, 0xBD, 0x9E, 0x9D, 0xEA, 0x15, 0xBB, 0x32, 0x74, 0x97, 0x71, 0xF1, 0x54, 0x13, 0xA2, 0x7C, 0x80, 0xE1, 0x01, 0xDD, 0x55},
   {0x58, 0xDA, 0xDA, 0xF8, 0xE7, 0x98, 0x4D, 0x6C, 0x5B, 0xCE, 0x3C, 0xE1, 0x10, 0xE2, 0x68, 0xB1, 0x55, 0xAB, 0x52, 0xB4, 0x22, 0x6B, 0x0C, 0xC9, 0xFC, 0x11, 0xFB, 0x9C, 0x7D, 0x38, 0x53, 0x49}},
  {{0x1E, 0x3B, 0x37, 0xD7, 0xB1, 0x12, 0xEB, 0x0A, 0x0B, 0x6B, 0x59, 0x31, 0x9E, 0xA3, 0x57, 0x02, 0x04, 0x50, 0x17, 0x5D, 0x7C, 0x85, 0x37, 0x14, 0x79, 0xE6, 0xF8, 0xD6, 0xAA, 0x8E, 0xE4, 0x38},
   {0x64, 0xC4, 0x5D, 0xBD, 0x5C, 0x65, 0x9A, 0x77, 0xA9, 0xF3, 0x6B, 0x2F, 0x7C, 0x55, 0x9F, 0xC3, 0x40, 0xBD, 0xEF, 0x2C, 0x98, 0x2C, 0xA6, 0xE9, 0xD0, 0x55, 0x10, 0xCB, 0xE7, 0x50, 0x15, 0x5D},
   {0xF0, 0x34, 0xF4, 0x73, 0xAE, 0x38, 0xE1, 0x10, 0xCB, 0x81, 0xD9, 0xD8, 0xC8, 0xF9, 0xC9, 0x32, 0x43, 0x84, 0xAF, 0x5F, 0x3B, 0x72, 0x26, 0x11, 0xAF, 0xB4, 0x76, 0x90, 0xD2, 0x1A, 0x24, 0x43},
   {0x41, 0xBC, 0x9C, 0x85, 0x87, 0x37, 0xB4, 0xB9, 0xC5, 0x7B, 0xE1, 0x8A, 0xB4, 0xC7, 0x8A, 0xC5, 0xF9, 0xBB, 0x99, 0x18, 0xD4, 0xB1, 0xA8, 0x01, 0x54, 0x0D, 0x62, 0x46, 0x92, 0xE9, 0x78, 0x10}},
  {{0x96, 0xF6, 0xE8, 0xAE, 0x7C, 0x58, 0x1E, 0x0C, 0x0A, 0x67, 0x14, 0x35, 0x23, 0x47, 0x09, 0x12, 0xD9, 0x3A, 0xE0, 0xD6, 0x2E, 0x05, 0x2E, 0xF3, 0xA3, 0xC3, 0x95, 0x0B, 0x83, 0x9F, 0xC4, 0x4C},
   {0x53, 0xDA, 0x6D, 0x63, 0xD9, 0xB7, 0x6D, 0x1E, 0x7B, 0x95, 0x4C, 0xFF, 0x0C, 0xCA, 0x5D, 0x7A, 0x5E, 0xD0, 0x2D, 0xE8, 0xE9, 0xC2, 0xEB, 0x8B, 0xA6, 0xB0, 0x66, 0x63, 0x7A, 0xE4, 0x0B, 0x22},
   {0xA8, 0xE7, 0x80, 0x49, 0x78, 0xDF, 0xBD, 0x50, 0xF1, 0xC2, 0xCD, 0x25, 0x02, 0x9F, 0x60, 0xF1, 0x5B, 0xBE, 0x56, 0x8F, 0x11, 0xDB, 0x1E, 0xF0, 0x0A, 0xF1, 0xE5, 0xA8, 0xC2, 0x86, 0xE1, 0x24},
   {0xA8, 0xE7, 0xB9, 0x90, 0x42, 0x99, 0x53, 0x05, 0x41, 0x67, 0x8F, 0x49, 0x25, 0x3F, 0x52, 0x9E, 0x5D, 0x82, 0x3F, 0x76, 0x4D, 0xE3, 0xE2, 0xA8, 0x50, 0xD5, 0xF9, 0xE6, 0x47, 0x7A, 0xA0, 0x4F}},
  {{0xD8, 0x07, 0x46, 0x0C, 0xCC, 0xA6, 0xEE, 0x7F, 0x98, 0xD8, 0x48, 0x03, 0x7D, 0xF6, 0xFF, 0x77, 0xB4, 0x07, 0x5E, 0xFA, 0xE2, 0x21, 0xAA, 0x12, 0x64, 0xC2, 0x27, 0x46, 0xB6, 0x04, 0xCB, 0x43},
   {0x5C, 0xC5, 0x8C, 0x5E, 0x40, 0x96, 0x92, 0x76, 0x79, 0x0A, 0xFA, 0xFC, 0xD5, 0x92, 0xCD, 0x46, 0x19, 0xAC, 0xBE, 0x2A, 0x9E, 0x55, 0x60, 0xE3, 0xDB, 0x1C, 0x29, 0x84, 0x10, 0x0F, 0xFE, 0x18},
   {0x54, 0x1A, 0x84, 0x37, 0x07, 0x74, 0x62, 0xC3, 0x22, 0xD4, 0x1F, 0x28, 0xC7, 0x2B, 0x02, 0x2E, 0xED, 0xCC, 0xF2, 0xB3, 0x78, 0x31, 0x0B, 0x3D, 0xF1, 0x53, 0x6B, 0xB1, 0x1B, 0x5E, 0xF4, 0x68},
   {0x73, 0xD4, 0x70, 0xED, 0x71, 0x74, 0xAF, 0xA6, 0x4A, 0xEC, 0x04, 0xD6, 0x16, 0xAC, 0x5B, 0xD7, 0xB5, 0xBE, 0x70, 0x9B, 0x46, 0xDC, 0x72, 0x35, 0xF3, 0x28, 0xD2, 0x47, 0x90, 0x93, 0x7F, 0x1A}},
  {{0x90, 0xBE, 0xA4, 0x1F, 0x82, 0x2F, 0x1B, 0xB1, 0x57, 0xFD, 0xB0, 0xFD, 0xA2, 0x59, 0xCA, 0xF6, 0xAE, 0x6C, 0xBE, 0xAB, 0xB1, 0x65, 0x0B, 0x3B, 0xE4, 0x7D, 0x7F, 0xEF, 0x89, 0x22, 0x09, 0x25},
   {0x7C, 0x7D, 0x40, 0x15, 0xB9, 0xF1, 0x5B, 0xE9, 0x5A, 0x47, 0x51, 0xAB, 0xA4, 0x74, 0xC5, 0xD8, 0xBA, 0x7E, 0x8B, 0x0A, 0xC2, 0xA5, 0x6F, 0xA7, 0xAA, 0xDA, 0x0F, 0x23, 0xC8, 0x25, 0x97, 0x71},
   {0x8B, 0x42, 0x3F, 0x16, 0x30, 0x1F, 0x6C, 0x1E, 0xBF, 0xE7, 0x96, 0x20, 0xAC, 0x4D, 0xD0, 0x1A, 0xF0, 0x16, 0xE1, 0xED, 0xE6, 0x14, 0x8F, 0x7B, 0x27, 0xCD, 0xC7, 0xB6, 0x0A, 0x85, 0x67, 0x55},
   {0x9B, 0x4F, 0x96, 0xEA, 0x73, 0xB5, 0xCF, 0x52, 0x50, 0x5E, 0xD1, 0x95, 0x5C, 0x3B, 0xD1, 0x02, 0x1F, 0x17, 0x4D, 0x13, 0xC4, 0x77, 0xEB, 0x59, 0x31, 0x8A, 0x93, 0xE4, 0xC5, 0x79, 0x24, 0x14}},
  {{0x7A, 0x0A, 0x4A, 0xB1, 0xDC, 0x51, 0x9D, 0xA2, 0x19, 0x98, 0xE3, 0xC8, 0x2E, 0x6A, 0xF6, 0x36, 0xE8, 0xE3, 0xB3, 0x12, 0xC8, 0xF4, 0xC1, 0xA2, 0x14, 0xD0, 0xFF, 0x8F, 0x01, 0xF5, 0xFA, 0x19},
   {0x3E, 0x6B, 0x30, 0xBA, 0x02, 0x69, 0x9A, 0xC6, 0x5A, 0xFD, 0x7E, 0xB3, 0xDB, 0x79, 0x89, 0xD4, 0x63, 0x43, 0xCB, 0xC1, 0x57, 0xB4, 0xB0, 0xAF, 0x1B, 0x3F, 0x2E, 0x5E, 0xDE, 0xA6, 0x24, 0x4D},
   {0x40, 0x5D, 0x7B, 0xDD, 0xCC, 0x39, 0x28, 0xD4, 0x2A, 0x58, 0xCA, 0x1A, 0xBD, 0x62, 0x8B, 0x20, 0xCF, 0x14, 0x5D, 0xF8, 0x08, 0x90, 0xF9, 0xBC, 0x4B, 0x0D, 0xE7, 0xD5, 0x6B, 0xF1, 0xAD, 0x14},
   {0xD2, 0x22, 0x51, 0xEB, 0xC6, 0xDB, 0xDC, 0x41, 0x35, 0x65, 0xFC, 0x10, 0xF1, 0x25, 0x3F, 0xF7, 0xAD, 0x2D, 0xDF, 0xB8, 0xB2, 0xA7, 0x13, 0xFB, 0xC4, 0x17, 0x32, 0xA9, 0xB8, 0xF3, 0x64, 0x1B}},
  {{0x5B, 0x91, 0x1A, 0xA3, 0xB7, 0x5D, 0x9A, 0xFC, 0xA0, 0x48, 0x31, 0x79, 0xB5, 0xCE, 0x80, 0x29, 0x95, 0x72, 0x12, 0x93, 0x59, 0xDA, 0xB4, 0xCB, 0x57, 0x73, 0x20, 0x1F, 0xA7, 0x84, 0x3C, 0x5F},
   {0x33, 0x80, 0xEC, 0x24, 0xF6, 0x48, 0x30, 0x01, 0xE2, 0x45, 0xAB, 0x7F, 0xF3, 0x21, 0x6A, 0xAC, 0x14, 0x3C, 0xA1, 0x98, 0xC2, 0xC3, 0x1C, 0xDE, 0x53, 0x41, 0x70, 0x8D, 0x3F, 0x9B, 0x25, 0x56},
   {0x6A, 0x2A, 0x28, 0x08, 0x89, 0x39, 0x22, 0xD9, 0xCC, 0xCD, 0x61, 0x95, 0xB0, 0x36, 0x80, 0x36, 0x46, 0x94, 0x75, 0x5E, 0x1B, 0x61, 0x68, 0x86, 0xB9, 0x9E, 0x30, 0x1C, 0xD2, 0x6E, 0xD7, 0x21},
   {0x0C, 0xC1, 0x44, 0x31, 0xC0, 0xBD, 0x82, 0xDB, 0xBE, 0x5D, 0x0B, 0x84, 0x9B, 0x2F, 0x9A, 0x53, 0x86, 0x57, 0x0A, 0x7F, 0xF0, 0x95, 0x65, 0x2A, 0xE9, 0xCE, 0xDB, 0xD7, 0x0C, 0x2F, 0x23, 0x77}},
  {{0x6C, 0xB7, 0xE8, 0x8A, 0x5E, 0xE6, 0x20, 0x6D, 0x3F, 0x5D, 0x84, 0x6C, 0xAE, 0xAC, 0x6D, 0x1A, 0xFD, 0x6E, 0xED, 0x36, 0x11, 0x1F, 0x49, 0x88, 0x05, 0xA9, 0xEB, 0x32, 0xD2, 0x11, 0x00, 0x0C},
   {0x3F, 0x58, 0x19, 0xF9, 0xFE, 0xA4, 0xE7, 0xA6, 0x9E, 0x67, 0x09, 0xD7, 0x8E, 0xB8, 0xFC, 0x36, 0xD7, 0x0E, 0xAC, 0x58, 0x63, 0xDE, 0xA5, 0x80, 0xAD, 0xED, 0x45, 0xC6, 0x22, 0xAC, 0xA9, 0x20},
   {0x40, 0xAA, 0xFD, 0x4C, 0x92, 0x14, 0x68, 0x26, 0xFC, 0x81, 0x39, 0x6B, 0x30, 0x0A, 0x28, 0xA3, 0x49, 0x15, 0x05, 0x3A, 0x9A, 0x79, 0x74, 0xD1, 0x63, 0x83, 0xC8, 0x10, 0xD1, 0x7E, 0x4D, 0x77},
   {0x41, 0x32, 0xB1, 0xAA, 0x09, 0x5B, 0x7B, 0x0B, 0xB3, 0x38, 0x8A, 0x99, 0xCC, 0x95, 0x9D, 0xF4, 0xB3, 0x7A, 0xB4, 0xC0, 0x35, 0x73, 0xDC, 0xD6, 0x0C, 0x1E, 0x4F, 0x9D, 0x5E, 0x73, 0xE6, 0x34}},
  {{0x00, 0x27, 0x2A, 0xD2, 0xEB, 0xE2, 0x90, 0x38, 0x75, 0x09, 0xE5, 0x16, 0xB0, 0x50, 0x57, 0x50, 0xD1, 0x19, 0x6C, 0x0E, 0xE2, 0x5C, 0x20, 0x04, 0x3C, 0x04, 0x4B, 0xD2, 0x30, 0xB3, 0xAC, 0x13},
   {0xB8, 0xED, 0xB6, 0x9C, 0x34, 0x82, 0x90, 0x87, 0xB7, 0xC7, 0x70, 0x03, 0xAF, 0x1F, 0x82, 0x2F, 0x14, 0xF7, 0x93, 0x59, 0xD8, 0xE1, 0x95, 0xE4, 0xB6, 0xB3, 0x63, 0xAC, 0xCA, 0xF9, 0xB6, 0x31},
   {0xF8, 0x1C, 0x15, 0xE4, 0xC9, 0x55, 0xC1, 0xF3, 0x5F, 0x8D, 0xBC, 0xC4, 0x68, 0x40, 0x7F, 0xB3, 0xFD, 0x85, 0xF0, 0x57, 0xDB, 0x75, 0x44, 0x4C, 0x63, 0x56, 0x77, 0xD2, 0x6F, 0xAB, 0x7A, 0x0C},
   {0xCC, 0x1A, 0x00, 0xEB, 0xFF, 0x09, 0xCB, 0x00, 0x79, 0xDB, 0x5D, 0x98, 0x5C, 0xD5, 0x51, 0x3E, 0x90, 0xE2, 0xFE, 0x41, 0x6A, 0x7D, 0x53, 0x30, 0xC7, 0x39, 0x90, 0xD8, 0xBF, 0x08, 0x02, 0x1B}},
  {{0xB2, 0x4B, 0x2D, 0x4A, 0x81, 0xD1, 0xF1, 0x83, 0xBD, 0x72, 0x5B, 0xF6, 0x42, 0x87, 0xE3, 0xE6, 0x75, 0xCF, 0xC8, 0x03, 0xAB, 0xF7, 0x6E, 0xED, 0xA9, 0x36, 0x8A, 0x16, 0x5F, 0xE9, 0x2A, 0x78},
   {0x34, 0x7F, 0x93, 0xDB, 0x13, 0x30, 0xD0, 0xB7, 0x7F, 0x4A, 0x5A, 0xF3, 0xE4, 0xEC, 0x63, 0x93, 0x7A, 0xDC, 0x3A, 0xA9, 0x17, 0x5F, 0x44, 0x9C, 0x37, 0x52, 0x78, 0x02, 0xB6, 0xBA, 0x38, 0x6A},
   {0x2C, 0x42, 0x5C, 0x5B, 0x37, 0x21, 0x66, 0x72, 0x50, 0x3D, 0x4D, 0x81, 0xA7, 0x05, 0x3A, 0x77, 0x3F, 0x03, 0x03, 0x27, 0x8C, 0x7A, 0x52, 0x5F, 0x2C, 0xE1, 0xA3, 0x5D, 0x7C, 0xEB, 0xC3, 0x0E},
   {0xC9, 0xAE, 0x03, 0xB2, 0x72, 0x30, 0xE9, 0xEA, 0xC0, 0x66, 0x50, 0x00, 0x80, 0xD7, 0xBC, 0xB1, 0x48, 0xCF, 0xD3, 0x78, 0xA1, 0x47, 0x02, 0x33, 0x90, 0x49, 0xEC, 0x70, 0x3B, 0xF1, 0x67, 0x29}},
};

field_element prime = {{0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F}};
field_element xr, yr, tr, zr;

volatile unsigned long overflow_count = 0;
ISR(TIMER1_OVF_vect) {overflow_count++;}

int main()
{
  Serial.begin(500000);
  Serial.println();

  //Example scalar (saved using little endian in hex 32 byte array) 3618502788666131106986593281521497120428558180689953803000975469142727125494 = 0x80000000000000000000000000000000a6f7cfbf0a86b3b727e1f776e7ae9f6
  unsigned char scalar[32] = {0xF6,	0xE9,	0x7A,	0x6E,	0x77,	0x1F,	0x7E,	0x72,	0x3B,	0x6B,	0xA8,	0xF0,	0xFB,	0x7C,	0x6F,	0x0A,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x08};
  field_element temp_scalar, xr, yr, tr, zr, Gx, Gy, Gt, Gz;

  cli();
  TCCR1A = 0;
  TCCR1B = bit(CS10);
  TCNT1 = 0;
  overflow_count = 0;

  TIMSK1 |= (1 << TOIE1);
  sei();

  scalar[0] &= 248;
  scalar[31] &= 127;
  scalar[31] |= 64;

  for (int i = 0; i < 32; i++){temp_scalar.Ed[i] = scalar[i];}
  for (int i = 0; i < 7; i++){Ed25519_scalar_sub_order(&temp_scalar);}
  for (int i = 0; i < 32; i++){scalar[i] = temp_scalar.Ed[i];}

  windowed_scalar_mul(&Gx, &Gy, &Gt, &Gz, scalar, PRECOMPUTED_POINTS);

  cli();
  unsigned long final_cycles = TCNT1;
  sei();

  unsigned long total_cycles = (overflow_count * 65536UL) + final_cycles;

  Serial.print("Number of cycles = ");
  Serial.println(total_cycles);

  Serial.print("Time requirement = ");
  Serial.print((float)total_cycles / 16);
  Serial.println(" Microseconds");

  Serial.print("Time requirement = ");
  Serial.print((float)total_cycles / 16000);
  Serial.println(" Millisecond");

  Serial.print("Time requirement = ");
  Serial.print((float)total_cycles / 16000000);
  Serial.println(" second");
  
  Serial.print("Affine x-coordinate: ");
  for (int i = 0; i < 32; i++)
  {
    Serial.print(Gx.Ed[i], HEX);
  }
  Serial.println();
}

void windowed_scalar_mul(field_element *xr, field_element *yr, field_element *tr, field_element *zr, unsigned char scalar[32], const field_element precomputed[65][4])
{
  field_element temp_result, temp_x, temp_y, temp_t, temp_z;
  unsigned char borrow;

  cli();
  borrow = scalar_sub_halforder(temp_result.Ed, scalar);
  sei();

  if (borrow == 0)
  {
    for (int i = 0; i < 32; i++){scalar[i] = temp_result.Ed[i];}

    windowed_scalar_mul(xr, yr, tr, zr, scalar, precomputed);

    cli();
    Ed255_subp_bigint(xr->Ed, xr->Ed);
    Ed255_subp_bigint(yr->Ed, yr->Ed);
    sei();
    return;
  }
  unsigned char window_value = (scalar[31] << 2) | (scalar[30] >> 6);
  memcpy_P(xr->Ed, precomputed[window_value][0].Ed, 32);
  memcpy_P(yr->Ed, precomputed[window_value][1].Ed, 32);
  memcpy_P(tr->Ed, precomputed[window_value][2].Ed, 32);
  memcpy_P(zr->Ed, precomputed[window_value][3].Ed, 32);

  for (int j = 5; j >= 0; j--) {double_point(xr, yr, tr, zr);}

  window_value = scalar[30] & 0x3F;

  memcpy_P(temp_x.Ed, precomputed[window_value][0].Ed, 32);
  memcpy_P(temp_y.Ed, precomputed[window_value][1].Ed, 32);
  memcpy_P(temp_t.Ed, precomputed[window_value][2].Ed, 32);
  memcpy_P(temp_z.Ed, precomputed[window_value][3].Ed, 32);

  add_points(xr, yr, tr, zr, &temp_x, &temp_y, &temp_t, &temp_z);

  for (int i = 9; i >= 0; i--)
  {
    for (int j = 5; j >= 0; j--) {double_point(xr, yr, tr, zr);}

    window_value = scalar[(i*3)+2] >> 2;   

    memcpy_P(temp_x.Ed, precomputed[window_value][0].Ed, 32);
    memcpy_P(temp_y.Ed, precomputed[window_value][1].Ed, 32);
    memcpy_P(temp_t.Ed, precomputed[window_value][2].Ed, 32);
    memcpy_P(temp_z.Ed, precomputed[window_value][3].Ed, 32);

    add_points(xr, yr, tr, zr, &temp_x, &temp_y, &temp_t, &temp_z);

    for (int j = 5; j >= 0; j--) {double_point(xr, yr, tr, zr);}

    window_value = ((scalar[(i*3)+2] & 0x03) << 4) | (scalar[(i*3)+1] >> 4);

    memcpy_P(temp_x.Ed, precomputed[window_value][0].Ed, 32);
    memcpy_P(temp_y.Ed, precomputed[window_value][1].Ed, 32);
    memcpy_P(temp_t.Ed, precomputed[window_value][2].Ed, 32);
    memcpy_P(temp_z.Ed, precomputed[window_value][3].Ed, 32);

    add_points(xr, yr, tr, zr, &temp_x, &temp_y, &temp_t, &temp_z);

    for (int j = 5; j >= 0; j--) {double_point(xr, yr, tr, zr);}

    window_value = ((scalar[(i*3)+1] & 0x0F)<<2) | (scalar[i*3]>>6);

    memcpy_P(temp_x.Ed, precomputed[window_value][0].Ed, 32);
    memcpy_P(temp_y.Ed, precomputed[window_value][1].Ed, 32);
    memcpy_P(temp_t.Ed, precomputed[window_value][2].Ed, 32);
    memcpy_P(temp_z.Ed, precomputed[window_value][3].Ed, 32);

    add_points(xr, yr, tr, zr, &temp_x, &temp_y, &temp_t, &temp_z);

    for (int j = 5; j >= 0; j--) {double_point(xr, yr, tr, zr);}

    //step 4. 5th window --> scalar[27] & 3F
    window_value = scalar[i*3] & 0x3F;

    memcpy_P(temp_x.Ed, precomputed[window_value][0].Ed, 32);
    memcpy_P(temp_y.Ed, precomputed[window_value][1].Ed, 32);
    memcpy_P(temp_t.Ed, precomputed[window_value][2].Ed, 32);
    memcpy_P(temp_z.Ed, precomputed[window_value][3].Ed, 32);

    add_points(xr, yr, tr, zr, &temp_x, &temp_y, &temp_t, &temp_z);
  }

  M_Inverse_Z(zr, zr);
  mul(xr, xr, zr);
  in_range(xr);
}

void double_point(field_element *xr, field_element *yr, field_element *tr, field_element *zr)
{
  field_element A, B, C, D, E, F, G, H;
  square(&A, xr);
  square(&B, yr);
  square(&C, zr);
  add(&C, &C, &C);
  sub(&D, &prime, &A);
  add(&E, xr, yr);
  square(&E, &E);
  sub(&E, &E, &A);
  sub(&E, &E, &B);
  add(&G, &D, &B);
  sub(&F, &G, &C);
  sub(&H, &D, &B);
  mul(xr, &E, &F);
  mul(yr, &G, &H);
  mul(tr, &E, &H);
  mul(zr, &F, &G);
}

void add_points(field_element *xr, field_element *yr, field_element *tr, field_element *zr, const field_element *px, const field_element *py, const field_element *tz, const field_element *pz)
{
    field_element A, B, C, D, E, F, G, H;
    sub(&A, yr, xr);
    add(&B, py, px);
    mul(&A, &A, &B);
    add(&B, yr, xr);
    sub(&C, py, px);
    mul(&B, &B, &C);
    mul(&C, zr, tz);
    add(&C, &C, &C);
    mul(&D, tr, pz);
    add(&D, &D, &D);
    add(&E, &D, &C);
    sub(&F, &B, &A);
    add(&G, &B, &A);
    sub(&H, &D, &C);
    mul(xr, &E, &F);
    mul(yr, &G, &H);
    mul(tr, &E, &H);
    mul(zr, &F, &G);
}

void M_Inverse_Z(field_element *r, const field_element *x)
{
  field_element z2;
  field_element z11;
  field_element z2_10_0;
  field_element z2_50_0;
  field_element z2_100_0;
  field_element t0;
  field_element t1;
  unsigned char i;

  square(&z2,x);
  square(&t1,&z2);
  square(&t0,&t1);
  mul(&z2_10_0,&t0,x);
  mul(&z11,&z2_10_0,&z2);
  square(&t0,&z11);
  mul(&z2_10_0,&t0,&z2_10_0);
  square(&t0,&z2_10_0);
  square(&t1,&t0);
  square(&t0,&t1);
  square(&t1,&t0);
  square(&t0,&t1);
  mul(&z2_10_0,&t0,&z2_10_0);
  square(&t0,&z2_10_0);
  square(&t1,&t0);
  for (i = 2;i < 10;i += 2){ square(&t0,&t1); square(&t1,&t0); }
  mul(&z2_50_0,&t1,&z2_10_0);
  square(&t0,&z2_50_0);
  square(&t1,&t0);
  for (i = 2;i < 20;i += 2) { square(&t0,&t1); square(&t1,&t0); }
  mul(&t0,&t1,&z2_50_0);
  square(&t1,&t0);
  square(&t0,&t1);
  for (i = 2;i < 10;i += 2) { square(&t1,&t0); square(&t0,&t1); }
  mul(&z2_50_0,&t0,&z2_10_0);
  square(&t0,&z2_50_0);
  square(&t1,&t0);
  for (i = 2;i < 50;i += 2) { square(&t0,&t1); square(&t1,&t0); }
  mul(&z2_100_0,&t1,&z2_50_0);
  square(&t1,&z2_100_0);
  square(&t0,&t1);
  for (i = 2;i < 100;i += 2) { square(&t1,&t0); square(&t0,&t1); }
  mul(&t1,&t0,&z2_100_0);
  square(&t0,&t1);
  square(&t1,&t0);
  for (i = 2;i < 50;i += 2) { square(&t0,&t1); square(&t1,&t0); }
  mul(&t0,&t1,&z2_50_0);
  square(&t1,&t0);
  square(&t0,&t1);
  square(&t1,&t0);
  square(&t0,&t1);
  square(&t1,&t0);
  mul(r,&t1,&z11);
}

void in_range(field_element *r)
{
  unsigned char bwr;
  field_element temp_result;
  bwr = Ed_num_sub_prime(temp_result.Ed, r->Ed);
  flip_if(r,&temp_result,1-bwr);
}

void flip_if(field_element *r, const field_element *x, unsigned char b)
{
  unsigned char i;
  unsigned long mask = b;
  mask = -mask;
  for(i=0;i<32;i++)
  {
    r->Ed[i] ^= mask & (x->Ed[i] ^ r->Ed[i]);
  }
}

void mul(field_element *r, const field_element *x, const field_element *y)
{
  unsigned char t[64];
  cli();
  Ed_mul(t,x->Ed,y->Ed);
  sei();
  modulo(r,t);
}

void square(field_element *r, const field_element *x)
{
  unsigned char t[64];
  cli();
  Ed25519_square(t,x->Ed);
  sei();
  modulo(r,t);
}

void Ed25519_scalar_sub_order(field_element *r)
{
  unsigned char bwr;
  field_element tempResult;
  cli();
  bwr = scalar_sub_order(tempResult.Ed, r->Ed);
  sei();
  flip_if(r,&tempResult,1-bwr);
}